Index: src/controls/player/MinimaxBot.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controls.player;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport controls.Game;\r\nimport controls.board.Board;\r\nimport controls.board.BoardSquare;\r\nimport controls.board.CitizenSquare;\r\nimport controls.board.MandarinSquare;\r\n\r\npublic class MinimaxBot extends Player {\r\n\tpublic MinimaxBot(int playerID, int point) {\r\n\t\tsuper(playerID, point);\r\n\t\t// TODO Auto-generated constructor stub\r\n\t}\r\n\t\r\n\tstatic private int currentSquareID;\r\n\tstatic private int citizens = 0;\r\n\t\r\n\tprivate void distribute(Board b, boolean isMoveLeft) {\r\n\t\tif(isMoveLeft) {\r\n\t\t\tif(currentSquareID==11) currentSquareID=0;\r\n\t\t\telse currentSquareID+=1;\r\n\t\t\tcitizens-=1;\r\n\t\t\tb.getListOfSquare().get(currentSquareID).setNumberOfCitizens(b.getListOfSquare().get(currentSquareID).getNumberOfCitizens()+1);\r\n\t\t}else {\r\n\t\t\tif(currentSquareID==0) currentSquareID=11;\r\n\t\t\telse currentSquareID-=1;\r\n\t\t\tcitizens-=1;\r\n\t\t\tb.getListOfSquare().get(currentSquareID).setNumberOfCitizens(b.getListOfSquare().get(currentSquareID).getNumberOfCitizens()+1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic int capture(Board b, boolean isMoveLeft) {\r\n\t\tint score = 0;\r\n\t\twhile(b.getListOfSquare().get(currentSquareID).isEmpty()==false) {\r\n\t\t\tscore+=b.getListOfSquare().get(currentSquareID).getNumberOfCitizens();\r\n\t\t\tif(b.getListOfSquare().get(currentSquareID) instanceof MandarinSquare) {\r\n\t\t\t\tMandarinSquare square = (MandarinSquare) b.getListOfSquare().get(currentSquareID);\r\n\t\t\t\tif(square.IsContainMandarin) {\r\n\t\t\t\t\tscore+=5;\r\n\t\t\t\t\tsquare.setContainMandarin(false);\r\n\t\t\t\t}\r\n\t\t\t\tb.getListOfSquare().set(currentSquareID, square);\r\n\t\t\t}\r\n\t\t\tb.getListOfSquare().get(currentSquareID).setNumberOfCitizens(0);\r\n\t\t\t\r\n\t\t\tcurrentSquareID = nextSquare(isMoveLeft);\r\n\t\t\tif(b.getListOfSquare().get(currentSquareID).isEmpty()) currentSquareID=nextSquare(isMoveLeft);\r\n\t\t\telse break;\r\n\t\t}\r\n\t\treturn score;\r\n\t}\r\n\t\r\n\tprivate int nextSquare(boolean isMoveLeft) {\r\n\t\tif(isMoveLeft) {\r\n\t\t\tif(currentSquareID==11) currentSquareID=0;\r\n\t\t\telse currentSquareID+=1;\r\n\t\t}else {\r\n\t\t\tif(currentSquareID==0) currentSquareID=11;\r\n\t\t\telse currentSquareID-=1;\r\n\t\t}\r\n\t\treturn currentSquareID;\r\n\t}\r\n\t\r\n\tpublic void display(Board b) {\r\n\t\tArrayList<BoardSquare> listOfSquares = b.getListOfSquare();\r\n        for(BoardSquare i : listOfSquares) {\r\n            if(i.getboardSquareID()==0) {\r\n                MandarinSquare ms0 = (MandarinSquare) i;\r\n                System.out.print(\" ( \" + ms0.getNumberOfCitizens() + \" \" + Boolean.toString(ms0.isContainMandarin()) + \" (\" + ms0.getboardSquareID() + \") | \");\r\n            }else if(i.getboardSquareID()==6) {\r\n                MandarinSquare ms6 = (MandarinSquare) i;\r\n                System.out.println(\"\" + ms6.getNumberOfCitizens() + \" \" + Boolean.toString(ms6.isContainMandarin()) + \" (\" + ms6.getboardSquareID() + \") ) \");\r\n                System.out.print(\"\\t\\t\");\r\n            }else if(i.getboardSquareID()>=1 && i.getboardSquareID() <= 5) {\r\n                System.out.print(i.getNumberOfCitizens() + \" (\" + i.getboardSquareID() + \") | \");\r\n            }else break;\r\n        }\r\n        for(int i = 11; i >= 7; i--) {\r\n            BoardSquare cb = b.getListOfSquare().get(i);\r\n            System.out.print(cb.getNumberOfCitizens() + \" (\" + cb.getboardSquareID() + \") | \");\r\n        }\r\n        System.out.println(\"\\n\");\r\n\t}\r\n\t\r\n\tpublic void dispatch(Board b, int chosenSquare) {\r\n\t\tboolean flag = true;\r\n\t\tif(chosenSquare<=5) {\r\n\t\t\tfor(int i = 1; i <= 5; i++) {\r\n\t\t\t\tif(!b.getListOfSquare().get(i).isEmpty()) {\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(flag == true) {\r\n\t\t\t\tfor(int i = 1; i <= 5; i++) {\r\n\t\t\t\t\tb.getListOfSquare().get(i).setNumberOfCitizens(1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else {\r\n\t\t\tfor(int i = 7; i <= 11; i++) {\r\n\t\t\t\tif(!b.getListOfSquare().get(i).isEmpty()) {\r\n\t\t\t\t\tflag = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(flag == true) {\r\n\t\t\t\tfor(int i = 7; i <= 11; i++) {\r\n\t\t\t\t\tb.getListOfSquare().get(i).setNumberOfCitizens(1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate int score(Board b, int chosenSquareID, boolean isMoveLeft) {\r\n\t\t\r\n\t\tint score = 0;\r\n//\t\tdispatch(b, chosenSquareID);\r\n\t\tcitizens = b.getListOfSquare().get(chosenSquareID).getNumberOfCitizens();\r\n\t\tb.getListOfSquare().get(chosenSquareID).setNumberOfCitizens(0);\r\n\t\tcurrentSquareID = chosenSquareID;\r\n\t\twhile(citizens>0) {\r\n\t\t\tdistribute(b, isMoveLeft);\r\n\t\t\tif(citizens==0) {\r\n\t\t\t\tcurrentSquareID = nextSquare(isMoveLeft);\r\n\t\t\t\tif(b.getListOfSquare().get(currentSquareID) instanceof CitizenSquare) {\r\n\t\t\t\t\tif(b.getListOfSquare().get(currentSquareID).isEmpty()==false) {\r\n\t\t\t\t\t\tcitizens = b.getListOfSquare().get(currentSquareID).getNumberOfCitizens();\r\n\t\t\t\t\t\tb.getListOfSquare().get(currentSquareID).setNumberOfCitizens(0);\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\tcurrentSquareID = nextSquare(isMoveLeft);\r\n\t\t\t\t\t\tscore += capture(b, isMoveLeft);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else {\r\n\t\t\t\t\tif(b.getListOfSquare().get(currentSquareID).isEmpty()) {\r\n\t\t\t\t\t\tcurrentSquareID = nextSquare(isMoveLeft);\r\n\t\t\t\t\t\tscore += capture(b, isMoveLeft);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn score;\r\n\t}\r\n\r\n\t\r\n\tprivate int minimax(Board b, int depth, int h, boolean isMaximizing, int chosenSquare, boolean isMoveLeft) {\r\n\t\tBoard board = new Board(b);\r\n\t\tString dir;\r\n\t\tif(isMoveLeft) {\r\n\t\t\tdir=\"left\";\r\n\t\t}else {\r\n\t\t\tdir=\"right\";\r\n\t\t}\r\n\t\tdisplay(board);\r\n\t\tSystem.out.println(\"Depth: \" + depth);\r\n\t\tSystem.out.println(\"Direction: \" + dir);\r\n\t\tSystem.out.println(\"Chosen square: \" + chosenSquare);\r\n\t\tint score = score(board, chosenSquare, isMoveLeft);\r\n\t\tSystem.out.println(\"Score: \" + score);\r\n\t\tdisplay(board);\r\n\t\tSystem.out.println(\"-----------------------------\");\r\n\t\tif(depth==h || (board.getListOfSquare().get(0).isEmpty() && board.getListOfSquare().get(6).isEmpty())) {\r\n\t\t\treturn score;\r\n\t\t}\r\n\t\tif(!isMaximizing) {\r\n\t\t\tint value = Integer.MIN_VALUE;\r\n\t\t\tdispatch(board, 1);\r\n\t\t\tfor(int i = 1; i <= 5; i++) {\r\n\t\t\t\tif(!board.getListOfSquare().get(i).isEmpty()==false) {\r\n\t\t\t\t\tvalue = Math.max(value, minimax(board, depth+1, h, !isMaximizing, i, isMoveLeft)-score);\r\n\t\t\t\t\tvalue = Math.max(value, minimax(board, depth+1, h, !isMaximizing, i, !isMoveLeft)-score);\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}else {\r\n\t\t\tint value = Integer.MAX_VALUE;\r\n\t\t\tdispatch(board, 7);\r\n\t\t\tfor(int i = 7; i <= 11; i++) {\r\n\t\t\t\tif(board.getListOfSquare().get(i).isEmpty()==false) {\r\n\t\t\t\t\tvalue = Math.min(value, score-minimax(board, depth+1, h, !isMaximizing, i, isMoveLeft));\r\n\t\t\t\t\tvalue = Math.min(value, score-minimax(board, depth+1, h, !isMaximizing, i, !isMoveLeft));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tSystem.out.println(\"Square ID: \" + chosenSquare);\r\n\t\t\tSystem.out.println(\"Value: \" + value);\r\n\t\t\treturn value;\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tpublic int makeHardBotMove(Board boards) {\r\n\t\tint move = 0;\r\n\t\tfinal Board b = new Board(boards);\r\n\t\tboolean isMoveLeft = true;\r\n\t\tint bestScore = Integer.MIN_VALUE;\r\n\t\tint bestSquareID = 0;\r\n\t\tboolean bestMove = true;\r\n\t\tdisplay(b);\r\n\t\tfor(int i = 1; i <= 5; i++) {\r\n\t\t\tif(!b.getListOfSquare().get(i).isEmpty()) {\r\n\t\t\t\tint squareID = i;\r\n\t\t\t\tint value1 = minimax(b, 0, 2, true, squareID, isMoveLeft);\r\n\t\t\t\tint value2 = minimax(b, 0, 2, true, squareID, !isMoveLeft);\r\n\t\t\t\tif(bestScore<=value1) {\r\n\t\t\t\t\tbestScore=value1;\r\n\t\t\t\t\tbestMove = isMoveLeft;\r\n\t\t\t\t\tbestSquareID = squareID;\r\n\t\t\t\t}\r\n\t\t\t\tif(bestScore<=value2) {\r\n\t\t\t\t\tbestScore = value2;\r\n\t\t\t\t\tbestMove = !isMoveLeft;\r\n\t\t\t\t\tbestSquareID = squareID;\r\n\t\t\t\t}\r\n\t\t\t\tSystem.out.println(\"**Square ID: \" + squareID);\r\n\t\t\t\tSystem.out.println(\"**Value 1: \" + value1);\r\n\t\t\t\tSystem.out.println(\"**Value 2: \" + value2);\r\n\t\t\t\tdisplay(b);\r\n\t\t\t}\r\n\t\t}\r\n\t\tString dir;\r\n\t\tif(bestMove) {\r\n\t\t\tdir=\"left\";\r\n\t\t}else {\r\n\t\t\tdir=\"right\";\r\n\t\t}\r\n\t\tSystem.out.println(\"Best choice: \" + (bestSquareID)/2);\r\n\t\tSystem.out.println(\"Best direction: \" + dir);\r\n\t\tif(bestMove) {\r\n\t\t\tmove +=1;\r\n\t\t\tmove += bestSquareID*2;\r\n\t\t}else {\r\n\t\t\tmove += bestSquareID*2;\r\n\t\t}\r\n\t\treturn move;\r\n\t}\r\n\t\r\n\tpublic int makeEasyBotMove(Board boards) {\r\n\t\tint move = 0;\r\n\t\tfinal Board b = new Board(boards);\r\n\t\tboolean isMoveLeft = true;\r\n\t\tint bestScore = Integer.MAX_VALUE;\r\n\t\tint bestSquareID = 0;\r\n\t\tboolean bestMove = true;\r\n\t\tdisplay(b);\r\n\t\tfor(int i = 1; i <= 5; i++) {\r\n\t\t\tif(!b.getListOfSquare().get(i).isEmpty()) {\r\n\t\t\t\tint squareID = i;\r\n\t\t\t\tint value1 = minimax(b, 0, 0, false, squareID, isMoveLeft);\r\n\t\t\t\tint value2 = minimax(b, 0, 0, false, squareID, !isMoveLeft);\r\n\t\t\t\tif(bestScore>=value1) {\r\n\t\t\t\t\tbestScore=value1;\r\n\t\t\t\t\tbestMove = isMoveLeft;\r\n\t\t\t\t\tbestSquareID = squareID;\r\n\t\t\t\t}\r\n\t\t\t\tif(bestScore>=value2) {\r\n\t\t\t\t\tbestScore = value2;\r\n\t\t\t\t\tbestMove = !isMoveLeft;\r\n\t\t\t\t\tbestSquareID = squareID;\r\n\t\t\t\t}\r\n\t\t\t\tSystem.out.println(\"**Square ID: \" + squareID);\r\n\t\t\t\tSystem.out.println(\"**Value 1: \" + value1);\r\n\t\t\t\tSystem.out.println(\"**Value 2: \" + value2);\r\n\t\t\t\tdisplay(b);\r\n\t\t\t}\r\n\t\t}\r\n\t\tString dir;\r\n\t\tif(bestMove) {\r\n\t\t\tdir=\"left\";\r\n\t\t}else {\r\n\t\t\tdir=\"right\";\r\n\t\t}\r\n\t\tSystem.out.println(\"Best choice: \" + (bestSquareID)/2);\r\n\t\tSystem.out.println(\"Best direction: \" + dir);\r\n\t\tif(bestMove) {\r\n\t\t\tmove +=1;\r\n\t\t\tmove += bestSquareID*2;\r\n\t\t}else {\r\n\t\t\tmove += bestSquareID*2;\r\n\t\t}\r\n\t\treturn move;\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controls/player/MinimaxBot.java b/src/controls/player/MinimaxBot.java
--- a/src/controls/player/MinimaxBot.java	(revision 404d5790f24d5262cf530f5203577ea303c78782)
+++ b/src/controls/player/MinimaxBot.java	(date 1718418876898)
@@ -281,4 +281,7 @@
 		}
 		return move;
 	}
+
+    public void makeBotMove(Board myBoard) {
+    }
 }
Index: src/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.Objects;\r\nimport java.util.ResourceBundle;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\nimport controls.Game;\r\nimport controls.board.Board;\r\nimport controls.board.BoardSquare;\r\nimport controls.board.CitizenSquare;\r\nimport controls.board.MandarinSquare;\r\nimport controls.player.MinimaxBot;\r\nimport controls.player.Player;\r\nimport javafx.animation.*;\r\nimport javafx.application.Application;\r\nimport javafx.application.Platform;\r\nimport javafx.beans.binding.Bindings;\r\nimport javafx.beans.value.ObservableValue;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.media.Media;\r\nimport javafx.scene.media.MediaPlayer;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.CycleMethod;\r\nimport javafx.scene.paint.Stop;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.paint.LinearGradient;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javax.swing.*;\r\n\r\n\r\nimport java.io.File;\r\n\r\nimport javafx.util.Duration;\r\n\r\n\r\npublic class Menu extends Application{\r\n    public Stage stage;\r\n    public Scene scene1, scene2, scene3, scene4, scene5, scene6, scene7, scene8, scene9;\r\n    public ArrayList<Scene> scenes = new ArrayList<Scene>();\r\n    public Parent layout1, layout2;\r\n    static JFrame frame;\r\n    public ArrayList<BoardSquare> squares;\r\n    public ArrayList<ViewStone> ImageHolder = new ArrayList<ViewStone>();\r\n    public Game MainGame;\r\n    public boolean startGame = false;\r\n    private GraphicsContext gc;\r\n    public ArrayList<Image> take_animation= new ArrayList<Image>();\r\n    public ArrayList<Image> drop_animation= new ArrayList<Image>();\r\n    public int take_animation_slide=-1;\r\n    public int drop_animation_slide=-1;\r\n    public int takeID;\r\n    public int dropID;\r\n    public ArrayList<Image> ciz_stones;\r\n    public ArrayList<String> stoneImages;\r\n    public Timeline mainTimeline;\r\n    public Utils MPlayer;\r\n\r\n    @Override\r\n    public void start(Stage primarystage) throws Exception {\r\n        layout1= createStartMenu();\r\n        scene1 =  new Scene(layout1);\r\n        stage = primarystage;\r\n        stage.setScene(scene1);\r\n        setup();\r\n        Canvas canvas = new Canvas(1080, 960);\r\n        gc = canvas.getGraphicsContext2D();\r\n        mainTimeline = new Timeline(new KeyFrame(Duration.millis(100), e -> run(gc)));\r\n        mainTimeline.setCycleCount(Timeline.INDEFINITE);\r\n        mainTimeline.play();\r\n\r\n        stage.show();\r\n        //layout2 = RenderUI();\r\n        Image bgImage = new Image(getClass().getResource(\"gui/asset/mandarin_background.png\").toExternalForm());\r\n        ImageView img_view =  new ImageView(bgImage);\r\n        img_view.setY(0);\r\n        img_view.setX(0);\r\n        Image inGameBackground = new Image(getClass().getResource(\"gui/asset/IngameMenu.png\").toExternalForm());\r\n        ImageView inGameBackgroundView = new ImageView(inGameBackground);\r\n        inGameBackgroundView.setX(960);\r\n        inGameBackgroundView.setY(0);\r\n\r\n        Image homeImage = new Image(getClass().getResource(\"gui/asset/HomeButton.png\").toExternalForm());\r\n        ImageView homeImageView = new ImageView(homeImage);\r\n        Image homeImage2 = new Image(getClass().getResource(\"gui/asset/HomeButton2.png\").toExternalForm());\r\n        ImageView homeImageView2 = new ImageView(homeImage2);\r\n\r\n        homeImageView.setFitHeight(280);\r\n        homeImageView.setFitWidth(210);\r\n        homeImageView2.setFitHeight(275);\r\n        homeImageView2.setFitWidth(210);\r\n\r\n        Button homeButton = new Button();\r\n        homeButton.setTranslateX(967);\r\n        homeButton.setTranslateY(205);\r\n        homeButton.setPrefSize(80, 80);\r\n        homeButton.setStyle(\"-fx-background-color: #ffffff00;\");\r\n        homeButton.setGraphic(homeImageView);\r\n\r\n\r\n        homeButton.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n            if (show) {\r\n                homeButton.setGraphic(homeImageView2);\r\n            } else {\r\n                homeButton.setGraphic(homeImageView);\r\n            }\r\n        });\r\n        homeButton.setOnAction(event -> {\r\n        \tMainGame.restart();\r\n            ImageHolder.clear();\r\n            loadImageHolder();\r\n            this.MPlayer.mediaPlayer.stop();\r\n            stage.setScene(scene1);\r\n        });\r\n\r\n        HBox Squares_row1 = new HBox(\r\n                new CitizenSquareUI(\"Square 1\",()->ChoosePivot(1),110,120,1),\r\n                new CitizenSquareUI(\"Square 2\",()->ChoosePivot(2),110,120,2),\r\n                new CitizenSquareUI(\"Square 3\",()->ChoosePivot(3),105,120,3),\r\n                new CitizenSquareUI(\"Square 4\",()->ChoosePivot(4),110,120,4),\r\n                new CitizenSquareUI(\"Square 5\",()->ChoosePivot(5),110,120,5)\r\n        );\r\n\r\n\r\n\r\n        Squares_row1.setTranslateX(210);\r\n        Squares_row1.setTranslateY(265);\r\n        HBox Squares_row2 = new HBox(\r\n                new CitizenSquareUI(\"Square 11\",()->ChoosePivot(11),110,120,11),\r\n                new CitizenSquareUI(\"Square 10\",()->ChoosePivot(10),110,120,10),\r\n                new CitizenSquareUI(\"Square 9\",()->ChoosePivot(9),105,120,9),\r\n                new CitizenSquareUI(\"Square 8\",()->ChoosePivot(8),110,120,8),\r\n                new CitizenSquareUI(\"Square 7\",()->ChoosePivot(7),110,120,7)\r\n        );\r\n        Squares_row2.setTranslateX(210);\r\n        Squares_row2.setTranslateY(395);\r\n        HBox Mandarin_Square1 = new HBox(\r\n                new CitizenSquareUI(\"Mandarin Square 6\",()->{},110,240,6)\r\n        );\r\n        Mandarin_Square1.setTranslateX(755);\r\n        Mandarin_Square1.setTranslateY(265);\r\n        HBox Mandarin_Square2 = new HBox(\r\n                new CitizenSquareUI(\"Mandarin Square 0\",()->{},110,240,0)\r\n        );\r\n        Mandarin_Square2.setTranslateX(100);\r\n        Mandarin_Square2.setTranslateY(265);\r\n\r\n        Image sound_button_image = new Image(getClass().getResource(\"gui/asset/unmute.png\").toExternalForm());\r\n        ImageView sound_button_view = new ImageView(sound_button_image);\r\n        Image mute_button_image = new Image(getClass().getResource(\"gui/asset/mute.png\").toExternalForm());\r\n        ImageView mute_button_view = new ImageView(mute_button_image);\r\n\r\n        Button soundButton =  new Button();\r\n        soundButton.setTranslateX(1000);\r\n        soundButton.setTranslateY(600);\r\n        soundButton.setPrefSize(80, 80);\r\n        soundButton.setStyle(\"-fx-background-color: #ffffff00;\");\r\n        soundButton.setGraphic(sound_button_view);\r\n        soundButton.setOnAction(event -> {\r\n            if (soundButton.getGraphic() == sound_button_view){\r\n                soundButton.setGraphic(mute_button_view);\r\n                this.MPlayer.mediaPlayer.pause();\r\n            }\r\n            else {\r\n                soundButton.setGraphic(sound_button_view);\r\n                this.MPlayer.mediaPlayer.play();\r\n            }\r\n        });\r\n\r\n        scene2 = new Scene(new Pane(img_view,canvas,Squares_row1,Squares_row2,Mandarin_Square1,Mandarin_Square2, inGameBackgroundView, homeButton,soundButton));\r\n\r\n\r\n        System.out.println(\"Running...\");\r\n\r\n        // arraylist of rule boards's path\r\n        ArrayList<String> rulePaths = new ArrayList<String>();\r\n        rulePaths.add(\"gui/asset/Setup.png\");\r\n        rulePaths.add(\"gui/asset/Scattering.png\");\r\n        rulePaths.add(\"gui/asset/Scattering2.png\");\r\n        rulePaths.add(\"gui/asset/Capturing.png\");\r\n        rulePaths.add(\"gui/asset/Passing.png\");\r\n        rulePaths.add(\"gui/asset/Dispatching.png\");\r\n        rulePaths.add(\"gui/asset/Winning.png\");\r\n\r\n\r\n        // help scene - scene3\r\n        ImageView helpView = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView setupRuleView = imageView(\"gui/asset/Setup.png\", 0, -500);\r\n        ImageView rightViewSetup = buttonImageView(\"gui/asset/RIGHT.png\");\r\n        ImageView rightViewSetup2 = buttonImageView(\"gui/asset/RIGHT2.png\");\r\n        Button rightButtonSetup = button(740, -415, rightViewSetup);\r\n        setActionRightButton(rightButtonSetup, rightViewSetup2, rightViewSetup, 3,\r\n        setupRuleView, rightButtonSetup, null);\r\n        ImageView backView = buttonImageView(\"gui/asset/BACk.png\");\r\n        ImageView backView2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButton = button(0, 0, backView);\r\n        setActionBackButton(backButton, backView, backView2, 3,\r\n        setupRuleView, rightButtonSetup, null);\r\n\r\n        scene3 = new Scene(new Pane(helpView, setupRuleView, rightButtonSetup, backButton));\r\n\r\n\r\n        // help scene - scene4\r\n        ImageView helpView1 = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView scatteringRuleView = imageView(\"gui/asset/Scattering.png\", 0, -500);\r\n        ImageView rightViewScattering = buttonImageView(\"gui/asset/RIGHT.png\");\r\n        ImageView rightViewScattering2 = buttonImageView(\"gui/asset/RIGHT2.png\");\r\n        Button rightButtonScattering = button(725, -410, rightViewScattering);\r\n        ImageView leftViewScattering = buttonImageView(\"gui/asset/LEFT.png\");\r\n        ImageView leftViewScattering2 = buttonImageView(\"gui/asset/LEFT2.png\");\r\n        Button leftButtonScattering= button(240, -410, leftViewScattering);\r\n        setActionRightButton(rightButtonScattering, rightViewScattering2, rightViewScattering, 4,\r\n        scatteringRuleView, rightButtonScattering, leftButtonScattering);\r\n        setActionLeftButton(leftButtonScattering, leftViewScattering2, leftViewScattering, 4,\r\n        scatteringRuleView, rightButtonScattering, leftButtonScattering);\r\n        ImageView backViewScattering = buttonImageView(\"gui/asset/BACK.png\");\r\n        ImageView backViewScattering2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButtonScattering = button(0, 0, backViewScattering);\r\n        setActionBackButton(backButtonScattering, backViewScattering, backViewScattering2, 4,\r\n        scatteringRuleView, rightButtonScattering, leftButtonScattering);\r\n\r\n        scene4 = new Scene(new Pane(helpView1, scatteringRuleView, rightButtonScattering, leftButtonScattering, backButtonScattering));\r\n\r\n\r\n        // 2th scattering scene - scene5\r\n        ImageView helpView2 = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView scatteringRuleViewSecond = imageView(\"gui/asset/Scattering2.png\", 0, -500);\r\n        ImageView rightViewScatteringSecond = buttonImageView(\"gui/asset/RIGHT.png\");\r\n        ImageView rightViewScatteringSecond2 = buttonImageView(\"gui/asset/RIGHT2.png\");\r\n        Button rightButtonScatteringSecond = button(725, -410, rightViewScatteringSecond);\r\n        ImageView leftViewScatteringSecond = buttonImageView(\"gui/asset/LEFT.png\");\r\n        ImageView leftViewScatteringSecond2 = buttonImageView(\"gui/asset/LEFT2.png\");\r\n        Button leftButtonScatteringSecond = button(240, -410, leftViewScatteringSecond);\r\n        setActionRightButton(rightButtonScatteringSecond, rightViewScatteringSecond2, rightViewScatteringSecond, 5,\r\n        scatteringRuleViewSecond, rightButtonScatteringSecond, leftButtonScatteringSecond);\r\n        setActionLeftButton(leftButtonScatteringSecond, leftViewScatteringSecond2, leftViewScatteringSecond, 5,\r\n        scatteringRuleViewSecond, rightButtonScatteringSecond, leftButtonScatteringSecond);\r\n        ImageView backViewScatteringSecond = buttonImageView(\"gui/asset/BACK.png\");\r\n        ImageView backViewScatteringSecond2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButtonScatteringSecond = button(0, 0, backViewScatteringSecond);\r\n        setActionBackButton(backButtonScatteringSecond, backViewScatteringSecond, backViewScatteringSecond2, 5,\r\n        scatteringRuleViewSecond, rightButtonScatteringSecond, leftButtonScatteringSecond);\r\n\r\n        scene5 = new Scene(new Pane(helpView2, scatteringRuleViewSecond, rightButtonScatteringSecond,\r\n                leftButtonScatteringSecond, backButtonScatteringSecond));\r\n\r\n        // capturing scene - scene6\r\n        ImageView helpView3 = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView capturingRuleView = imageView(\"gui/asset/Capturing.png\", 0, -500);\r\n        ImageView rightViewCapturing = buttonImageView(\"gui/asset/RIGHT.png\");\r\n        ImageView rightViewCapturing2 = buttonImageView(\"gui/asset/RIGHT2.png\");\r\n        Button rightButtonCapturing = button(725, -410, rightViewCapturing);\r\n        ImageView leftViewCapturing = buttonImageView(\"gui/asset/LEFT.png\");\r\n        ImageView leftViewCapturing2 = buttonImageView(\"gui/asset/LEFT2.png\");\r\n        Button leftButtonCapturing = button(240, -410, leftViewCapturing);\r\n        setActionRightButton(rightButtonCapturing, rightViewCapturing2, rightViewCapturing, 6,\r\n        capturingRuleView, rightButtonCapturing, leftButtonCapturing);\r\n        setActionLeftButton(leftButtonCapturing, leftViewCapturing2, leftViewCapturing, 6,\r\n        capturingRuleView, rightButtonCapturing, leftButtonCapturing);\r\n        ImageView backViewCapturing = buttonImageView(\"gui/asset/BACK.png\");\r\n        ImageView backViewCapturing2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButtonCapturing = button(0, 0, backViewCapturing);\r\n        setActionBackButton(backButtonCapturing, backViewCapturing, backViewCapturing2, 6,\r\n        capturingRuleView, rightButtonCapturing, leftButtonCapturing);\r\n\r\n        scene6 = new Scene(new Pane(helpView3, capturingRuleView, rightButtonCapturing,\r\n                leftButtonCapturing, backButtonCapturing));\r\n\r\n        // passing scene - scene7\r\n        ImageView helpView4 = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView passingRuleView = imageView(\"gui/asset/Passing.png\", 0, -500);\r\n        ImageView rightViewPassing = buttonImageView(\"gui/asset/RIGHT.png\");\r\n        ImageView rightViewPassing2 = buttonImageView(\"gui/asset/RIGHT2.png\");\r\n        Button rightButtonPassing = button(725, -410, rightViewPassing);\r\n        ImageView leftViewPassing = buttonImageView(\"gui/asset/LEFT.png\");\r\n        ImageView leftViewPassing2 = buttonImageView(\"gui/asset/LEFT2.png\");\r\n        Button leftButtonPassing = button(240, -410, leftViewPassing);\r\n        setActionRightButton(rightButtonPassing, rightViewPassing2, rightViewPassing, 7,\r\n        passingRuleView, rightButtonPassing, leftButtonPassing);\r\n        setActionLeftButton(leftButtonPassing, leftViewPassing2, leftViewPassing, 7,\r\n        passingRuleView, rightButtonPassing, leftButtonPassing);\r\n        ImageView backViewPassing = buttonImageView(\"gui/asset/BACK.png\");\r\n        ImageView backViewPassing2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButtonPassing = button(0, 0, backViewPassing);\r\n        setActionBackButton(backButtonPassing, backViewPassing, backViewPassing2, 7,\r\n                passingRuleView, rightButtonPassing, leftButtonPassing);\r\n\r\n        scene7 = new Scene(new Pane(helpView4, passingRuleView, rightButtonPassing,\r\n                leftButtonPassing, backButtonPassing));\r\n\r\n        /////////////\r\n        // dispatching scene - scene8\r\n        ImageView helpView5 = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView dispatchingRuleView = imageView(\"gui/asset/Dispatching.png\", 0, -500);\r\n        ImageView rightViewDispatching = buttonImageView(\"gui/asset/RIGHT.png\");\r\n        ImageView rightViewDispatching2 = buttonImageView(\"gui/asset/RIGHT2.png\");\r\n        Button rightButtonDispatching = button(725, -410, rightViewDispatching);\r\n        ImageView leftViewDispatching = buttonImageView(\"gui/asset/LEFT.png\");\r\n        ImageView leftViewDispatching2 = buttonImageView(\"gui/asset/LEFT2.png\");\r\n        Button leftButtonDispatching = button(240, -410, leftViewDispatching);\r\n        setActionRightButton(rightButtonDispatching, rightViewDispatching2, rightViewDispatching, 8,\r\n        dispatchingRuleView, rightButtonDispatching, leftButtonDispatching);\r\n        setActionLeftButton(leftButtonDispatching, leftViewDispatching2, leftViewDispatching, 8,\r\n        dispatchingRuleView, rightButtonDispatching, leftButtonDispatching);\r\n        ImageView backViewDispatching = buttonImageView(\"gui/asset/BACK.png\");\r\n        ImageView backViewDispatching2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButtonDispatching = button(0,0,backViewDispatching);\r\n        setActionBackButton(backButtonDispatching, backViewDispatching, backViewDispatching2, 8,\r\n                dispatchingRuleView, rightButtonDispatching, leftButtonDispatching);\r\n\r\n        scene8 = new Scene(new Pane(helpView5, dispatchingRuleView, rightButtonDispatching,\r\n                leftButtonDispatching, backButtonDispatching));\r\n\r\n        ///////////////////////\r\n        // winning scene - scene9\r\n        ImageView helpView6 = imageView(\"gui/asset/MenuScene.png\", 0, 0);\r\n        ImageView winningRuleView = imageView(\"gui/asset/Winning.png\", 0, -500);\r\n        ImageView leftViewWinning = buttonImageView(\"gui/asset/LEFT.png\");\r\n        ImageView leftViewWinning2 = buttonImageView(\"gui/asset/LEFT2.png\");\r\n        Button leftButtonWinning = button(240, -410, leftViewWinning);\r\n        setActionLeftButton(leftButtonWinning, leftViewWinning2, leftViewWinning, 9,\r\n        winningRuleView, null, leftButtonWinning);\r\n        ImageView backViewWinning = buttonImageView(\"gui/asset/BACK.png\");\r\n        ImageView backViewWinning2 = buttonImageView(\"gui/asset/BACK2.png\");\r\n        Button backButtonWinning = button(0, 0, backViewWinning);\r\n        setActionBackButton(backButtonWinning, backViewWinning, backViewWinning2, 9,\r\n                winningRuleView, null, leftButtonWinning);\r\n\r\n        scene9 = new Scene(new Pane(helpView6, winningRuleView,\r\n                leftButtonWinning, backButtonWinning));\r\n\r\n        scenes.add(scene3);\r\n        scenes.add(scene4);\r\n        scenes.add(scene5);\r\n        scenes.add(scene6);\r\n        scenes.add(scene7);\r\n        scenes.add(scene8);\r\n        scenes.add(scene9);\r\n    }\r\n\r\n\r\n    // create ImageView\r\n    public ImageView imageView(String path, int X, int Y) {\r\n        Image image = new Image(getClass().getResource(path).toExternalForm());\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setTranslateX(X);\r\n        imageView.setTranslateY(Y);\r\n        return imageView;\r\n    }\r\n\r\n    // create button image view\r\n    public ImageView buttonImageView(String path) {\r\n        Image image = new Image(path);\r\n        ImageView imageView = new ImageView(image);\r\n        imageView.setFitWidth(80);\r\n        imageView.setFitHeight(80);\r\n        return imageView;\r\n    }\r\n\r\n    // create button\r\n    public Button button(int X, int Y, ImageView imageView) {\r\n        Button button = new Button();\r\n        button.setTranslateX(X);\r\n        button.setTranslateY(Y);\r\n        button.setPrefSize(80, 80);\r\n        button.setStyle(\"-fx-background-color: #ffffff00\");\r\n        button.setGraphic(imageView);\r\n        return button;\r\n    }\r\n\r\n    // set action for button\r\n    public void setActionRightButton(Button button, ImageView imageView2, ImageView imageView, int currentScene,\r\n                                     ImageView currentBoard, Button currentRightButton, Button currentLeftButton) {\r\n        if (currentScene != 9) {\r\n            button.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n                if(show) {\r\n                    button.setGraphic(imageView2);\r\n                } else {\r\n                    button.setGraphic(imageView);\r\n                }\r\n            });\r\n\r\n            button.setOnAction(event -> {\r\n                stage.setScene(scenes.get(currentScene - 2));\r\n                currentBoard.setTranslateY(-500);\r\n                currentRightButton.setTranslateY(-410);\r\n                if (currentLeftButton != null) {\r\n                    currentLeftButton.setTranslateY(-410);\r\n                }\r\n\r\n                TranslateTransition nextBoardTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 2).getRoot()).getChildren().get(1));\r\n                nextBoardTransition.setByY(500);\r\n                nextBoardTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                nextBoardTransition.play();\r\n                if (currentScene != 8) {\r\n                    TranslateTransition nextRightButtonTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 2).getRoot()).getChildren().get(2));\r\n                    nextRightButtonTransition.setByY(500);\r\n                    nextRightButtonTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                    nextRightButtonTransition.play();\r\n\r\n                    TranslateTransition nextLeftButtonTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 2).getRoot()).getChildren().get(3));\r\n                    nextLeftButtonTransition.setByY(500);\r\n                    nextLeftButtonTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                    nextLeftButtonTransition.play();\r\n                } else {\r\n                    TranslateTransition nextLeftButtonTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 2).getRoot()).getChildren().get(2));\r\n                    nextLeftButtonTransition.setByY(500);\r\n                    nextLeftButtonTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                    nextLeftButtonTransition.play();\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // set action for left button\r\n    public void setActionLeftButton(Button button, ImageView imageView2, ImageView imageView, int currentScene,\r\n                               ImageView currentBoard, Button currentRightButton, Button currentLeftButton) {\r\n        if (currentScene != 3) {\r\n            button.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n                if (show) {\r\n                    button.setGraphic(imageView2);\r\n                } else {\r\n                    button.setGraphic(imageView);\r\n                }\r\n            });\r\n\r\n            button.setOnAction(event -> {\r\n                stage.setScene(scenes.get(currentScene - 4));\r\n                currentBoard.setTranslateY(-500);\r\n                if (currentRightButton != null) {\r\n                    currentRightButton.setTranslateY(-410);\r\n                }\r\n                currentLeftButton.setTranslateY(-410);\r\n\r\n                TranslateTransition previousBoardTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 4).getRoot()).getChildren().get(1));\r\n                previousBoardTransition.setByY(500);\r\n                previousBoardTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                previousBoardTransition.play();\r\n\r\n                if (currentScene != 4) {\r\n                    TranslateTransition previousRigthButtonTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 4).getRoot()).getChildren().get(2));\r\n                    previousRigthButtonTransition.setByY(500);\r\n                    previousRigthButtonTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                    previousRigthButtonTransition.play();\r\n\r\n                    TranslateTransition previousLeftButtonTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 4).getRoot()).getChildren().get(3));\r\n                    previousLeftButtonTransition.setByY(500);\r\n                    previousLeftButtonTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                    previousLeftButtonTransition.play();\r\n                } else {\r\n                    TranslateTransition previousRightButtonTransition = new TranslateTransition(Duration.seconds(1), ((Pane) scenes.get(currentScene - 4).getRoot()).getChildren().get(2));\r\n                    previousRightButtonTransition.setByY(500);\r\n                    previousRightButtonTransition.setInterpolator(Interpolator.EASE_OUT);\r\n                    previousRightButtonTransition.play();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // set action for back button\r\n    public void setActionBackButton(Button button, ImageView imageView, ImageView imageView2, int currentScene,\r\n                                    ImageView currentBoard, Button currentRightButton, Button currentLeftButton) {\r\n        button.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n            if (show) {\r\n                button.setGraphic(imageView2);\r\n            } else {\r\n                button.setGraphic(imageView);\r\n            }\r\n        });\r\n\r\n        button.setOnAction(event -> {\r\n            stage.setScene(scene1);\r\n            currentBoard.setTranslateY(-500);\r\n            if (currentRightButton != null) {\r\n                currentRightButton.setTranslateY(-410);\r\n            }\r\n            if (currentLeftButton != null) {\r\n                currentLeftButton.setTranslateY(-410);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public void setScene(Scene scene) {\r\n        Canvas canvas = new Canvas(1080, 960);\r\n        gc = canvas.getGraphicsContext2D();\r\n        Image bgImage = new Image(getClass().getResource(\"gui/asset/mandarin_background.png\").toExternalForm());\r\n        ImageView img_view =  new ImageView(bgImage);\r\n        img_view.setY(0);\r\n        img_view.setX(0);\r\n        HBox Squares_row1 = new HBox(\r\n                new CitizenSquareUI(\"Square 1\",()->ChoosePivot(1),110,120,1),\r\n                new CitizenSquareUI(\"Square 2\",()->ChoosePivot(2),110,120,2),\r\n                new CitizenSquareUI(\"Square 3\",()->ChoosePivot(3),105,120,3),\r\n                new CitizenSquareUI(\"Square 4\",()->ChoosePivot(4),110,120,4),\r\n                new CitizenSquareUI(\"Square 5\",()->ChoosePivot(5),110,120,5)\r\n        );\r\n\r\n        Squares_row1.setTranslateX(210);\r\n        Squares_row1.setTranslateY(265);\r\n        HBox Squares_row2 = new HBox(\r\n                new CitizenSquareUI(\"Square 11\",()->ChoosePivot(11),110,120,11),\r\n                new CitizenSquareUI(\"Square 10\",()->ChoosePivot(10),110,120,10),\r\n                new CitizenSquareUI(\"Square 9\",()->ChoosePivot(9),105,120,9),\r\n                new CitizenSquareUI(\"Square 8\",()->ChoosePivot(8),110,120,8),\r\n                new CitizenSquareUI(\"Square 7\",()->ChoosePivot(7),110,120,7)\r\n        );\r\n        Squares_row2.setTranslateX(210);\r\n        Squares_row2.setTranslateY(395);\r\n        HBox Mandarin_Square1 = new HBox(\r\n                new CitizenSquareUI(\"Mandarin Square 6\",()->{},110,240,6)\r\n        );\r\n        Mandarin_Square1.setTranslateX(755);\r\n        Mandarin_Square1.setTranslateY(265);\r\n        HBox Mandarin_Square2 = new HBox(\r\n                new CitizenSquareUI(\"Mandarin Square 0\",()->{},110,240,0)\r\n        );\r\n        Mandarin_Square2.setTranslateX(100);\r\n        Mandarin_Square2.setTranslateY(265);\r\n\r\n        scene = new Scene(new Pane(img_view,canvas,Squares_row1,Squares_row2,Mandarin_Square1,Mandarin_Square2));\r\n    }\r\n\r\n    private void run(GraphicsContext gc){\r\n    \tif(MainGame.isP1Turn()) {\r\n    \t\tImage p1TurnImage = new Image(getClass().getResource(\"gui/asset/P1turn.png\").toExternalForm());\r\n            gc.clearRect(180, 100, 171, 31);\r\n            gc.drawImage(p1TurnImage, 180, 100, 171, 31);\r\n    \t}else {\r\n    \t\tImage p2TurnImage = new Image(getClass().getResource(\"gui/asset/P2turn.png\").toExternalForm());\r\n    \t\tgc.clearRect(180, 100, 171, 31);\r\n            gc.drawImage(p2TurnImage, 180, 100, 171, 31);\r\n    \t}\r\n        Image man_stone = new Image(getClass().getResource(\"gui/asset/ManStone.png\").toExternalForm());\r\n        gc.clearRect(100, 265,770,320);\r\n        for (ViewStone stone : ImageHolder) {\r\n            if (stone.type == 1) {\r\n                gc.drawImage(man_stone, stone.coordX, stone.coordY, 32, 32);\r\n            } else {\r\n                gc.drawImage(stone.image, stone.coordX, stone.coordY, 16, 16);\r\n            }\r\n        }\r\n        if (this.take_animation_slide==0) this.take_animation_slide=-1;\r\n        else if (this.take_animation_slide!=-1){\r\n            take(this.takeID);\r\n        }\r\n        if (this.drop_animation_slide==6) this.drop_animation_slide=-1;\r\n        else if (this.drop_animation_slide!=-1){\r\n            drop(this.dropID);\r\n        }\r\n        int player1Point = MainGame.getPlayer1().getPoint();\r\n        int player2Point = MainGame.getPlayer2().getPoint();\r\n        int xPoint2 = 750;\r\n        int yPoint2 = 130;\r\n        int xPoint1 = 280;\r\n        int yPoint1 = 600;\r\n        gc.clearRect(xPoint1-50, yPoint1, 64, 57);\r\n        gc.clearRect(xPoint1-100, yPoint1, 64, 57);\r\n        gc.clearRect(xPoint2-50, yPoint2, 64, 57);\r\n        gc.clearRect(xPoint2-100, yPoint2, 64, 57);\r\n        \r\n        while(player1Point>=0) {\r\n        \txPoint1 -= 50;\r\n//        \tgc.clearRect(xPoint1, yPoint1, 64, 57);\r\n        \tint printNum = player1Point % 10;\r\n        \tplayer1Point/=10;\r\n        \tif(printNum==1) {\r\n        \t\tImage number1 = new Image(getClass().getResource(\"gui/asset/1_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number1, xPoint1, yPoint1);\r\n        \t}else if(printNum==2) {\r\n        \t\tImage number2 = new Image(getClass().getResource(\"gui/asset/2_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number2, xPoint1, yPoint1);\r\n        \t}else if(printNum==3) {\r\n        \t\tImage number3 = new Image(getClass().getResource(\"gui/asset/3_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number3, xPoint1, yPoint1);\r\n        \t}else if(printNum==4) {\r\n        \t\tImage number4 = new Image(getClass().getResource(\"gui/asset/4_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number4, xPoint1, yPoint1);\r\n        \t}else if(printNum==5) {\r\n        \t\tImage number5 = new Image(getClass().getResource(\"gui/asset/5_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number5, xPoint1, yPoint1);\r\n        \t}else if(printNum==6) {\r\n        \t\tImage number6 = new Image(getClass().getResource(\"gui/asset/6_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number6, xPoint1, yPoint1);\r\n        \t}else if(printNum==7) {\r\n        \t\tImage number7 = new Image(getClass().getResource(\"gui/asset/7_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number7, xPoint1, yPoint1);\r\n        \t}else if(printNum==8) {\r\n        \t\tImage number8 = new Image(getClass().getResource(\"gui/asset/8_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number8, xPoint1, yPoint1);\r\n        \t}else if(printNum==9) {\r\n        \t\tImage number9 = new Image(getClass().getResource(\"gui/asset/9_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number9, xPoint1, yPoint1);\r\n        \t}else if(printNum==0) {\r\n        \t\tImage number0 = new Image(getClass().getResource(\"gui/asset/0_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number0, xPoint1, yPoint1);\r\n        \t}\r\n        \tif(player1Point==0) player1Point-=1;\r\n        }\r\n        \r\n        while(player2Point>=0) {\r\n        \txPoint2 -= 50;\r\n//        \tgc.clearRect(xPoint2, yPoint2, 64, 57);\r\n        \tint printNum = player2Point % 10;\r\n        \tplayer2Point/=10;\r\n        \tif(printNum==1) {\r\n        \t\tImage number1 = new Image(getClass().getResource(\"gui/asset/1_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number1, xPoint2, yPoint2);\r\n        \t}else if(printNum==2) {\r\n        \t\tImage number2 = new Image(getClass().getResource(\"gui/asset/2_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number2, xPoint2, yPoint2);\r\n        \t}else if(printNum==3) {\r\n        \t\tImage number3 = new Image(getClass().getResource(\"gui/asset/3_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number3, xPoint2, yPoint2);\r\n        \t}else if(printNum==4) {\r\n        \t\tImage number4 = new Image(getClass().getResource(\"gui/asset/4_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number4, xPoint2, yPoint2);\r\n        \t}else if(printNum==5) {\r\n        \t\tImage number5 = new Image(getClass().getResource(\"gui/asset/5_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number5, xPoint2, yPoint2);\r\n        \t}else if(printNum==6) {\r\n        \t\tImage number6 = new Image(getClass().getResource(\"gui/asset/6_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number6, xPoint2, yPoint2);\r\n        \t}else if(printNum==7) {\r\n        \t\tImage number7 = new Image(getClass().getResource(\"gui/asset/7_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number7, xPoint2, yPoint2);\r\n        \t}else if(printNum==8) {\r\n        \t\tImage number8 = new Image(getClass().getResource(\"gui/asset/8_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number8, xPoint2, yPoint2);\r\n        \t}else if(printNum==9) {\r\n        \t\tImage number9 = new Image(getClass().getResource(\"gui/asset/9_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number9, xPoint2, yPoint2);\r\n        \t}else if(printNum==0) {\r\n        \t\tImage number0 = new Image(getClass().getResource(\"gui/asset/0_resize.png\").toExternalForm());\r\n        \t\tgc.drawImage(number0, xPoint2, yPoint2);\r\n        \t}\r\n        \tif(player2Point==0) player2Point-=1;\r\n        }\r\n        \r\n        int numCiz11 = MainGame.getMyBoard().getListOfSquare().get(11).getNumberOfCitizens();\r\n        int numCiz10 = MainGame.getMyBoard().getListOfSquare().get(10).getNumberOfCitizens();\r\n        int numCiz9 = MainGame.getMyBoard().getListOfSquare().get(9).getNumberOfCitizens();\r\n        int numCiz8 = MainGame.getMyBoard().getListOfSquare().get(8).getNumberOfCitizens();\r\n        int numCiz7 = MainGame.getMyBoard().getListOfSquare().get(7).getNumberOfCitizens();\r\n        int numCiz6 = MainGame.getMyBoard().getListOfSquare().get(6).getNumberOfCitizens();\r\n        int numCiz5 = MainGame.getMyBoard().getListOfSquare().get(5).getNumberOfCitizens();\r\n        int numCiz4 = MainGame.getMyBoard().getListOfSquare().get(4).getNumberOfCitizens();\r\n        int numCiz3 = MainGame.getMyBoard().getListOfSquare().get(3).getNumberOfCitizens();\r\n        int numCiz2 = MainGame.getMyBoard().getListOfSquare().get(2).getNumberOfCitizens();\r\n        int numCiz1 = MainGame.getMyBoard().getListOfSquare().get(1).getNumberOfCitizens();\r\n        int numCiz0 = MainGame.getMyBoard().getListOfSquare().get(0).getNumberOfCitizens();\r\n        int ySquare1 = 530;\r\n        int xSquare11 = 290;        \r\n        displayNumberOfCitizen(numCiz11, xSquare11, ySquare1);\r\n        int xSquare10 = xSquare11+110;\r\n        displayNumberOfCitizen(numCiz10, xSquare10, ySquare1);\r\n        int xSquare9 = xSquare10+110;\r\n        displayNumberOfCitizen(numCiz9, xSquare9, ySquare1);\r\n        int xSquare8 = xSquare9+110;\r\n        displayNumberOfCitizen(numCiz8, xSquare8, ySquare1);\r\n        int xSquare7 = xSquare8+110;\r\n        displayNumberOfCitizen(numCiz7, xSquare7, ySquare1);\r\n        \r\n        int ySquare2 = 230;\r\n        int xSquare1 = 290;\r\n        displayNumberOfCitizen(numCiz1, xSquare1, ySquare2);\r\n        int xSquare2 = xSquare1+110;\r\n        displayNumberOfCitizen(numCiz2, xSquare2, ySquare2);\r\n        int xSquare3 = xSquare2+110;\r\n        displayNumberOfCitizen(numCiz3, xSquare3, ySquare2);\r\n        int xSquare4 = xSquare3+110;\r\n        displayNumberOfCitizen(numCiz4, xSquare4, ySquare2);\r\n        int xSquare5 = xSquare4+110;\r\n        displayNumberOfCitizen(numCiz5, xSquare5, ySquare2);\r\n        \r\n        \r\n        int yMandarinSquare = 380;\r\n        int xMandarinSquare0 = 95;\r\n        displayNumberOfCitizen(numCiz0, xMandarinSquare0, yMandarinSquare);\r\n        int xMandarinSquare6 = xMandarinSquare0+810;\r\n        displayNumberOfCitizen(numCiz6, xMandarinSquare6, yMandarinSquare);\r\n        \r\n\r\n    }\r\n    \r\n    void displayNumberOfCitizen(int numberOfCitizen, int xPoint, int yPoint) {\r\n    \tint x = xPoint;\r\n    \tint y = yPoint;\r\n    \tgc.clearRect(x-20, y, 34, 30);\r\n    \tgc.clearRect(x-40, y, 34, 30);\r\n    \tint nc = numberOfCitizen;\r\n    \twhile(nc>=0) {\r\n    \t\tx-=20;\r\n    \t\tint printNum = nc%10;\r\n    \t\tnc/=10;\r\n    \t\tif(printNum==0) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/0_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==1) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/1_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==2) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/2_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==3) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/3_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==4) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/4_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==5) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/5_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==6) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/6_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==7) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/7_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==8) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/8_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}else if(printNum==9) {\r\n    \t\t\tImage image = new Image(getClass().getResource(\"gui/asset/9_citizen.png\").toExternalForm());\r\n    \t\t\tgc.drawImage(image, x, y);\r\n    \t\t}\r\n    \t\tif(nc==0) nc-=1;\r\n    \t}\r\n    }\r\n    \r\n    public static class ViewStone{\r\n        public int square_id;\r\n        public int coordX;\r\n        public int coordY;\r\n        public int type;\r\n        public Image image;\r\n        public ViewStone( int square_id, int coordX, int coordY,int type, Image image){\r\n            this.square_id= square_id;\r\n            this.coordX= coordX;\r\n            this.coordY= coordY;\r\n            this.type= type;\r\n            this.image= image;\r\n        }\r\n    }\r\n\r\n    public void loadImageHolder() {\r\n        int step_x= 100;\r\n        for (int i=0;i<squares.size();i++){\r\n            if (i==0) {\r\n                MandarinSquare new_square = (MandarinSquare) squares.get(i);\r\n                if (new_square.isContainMandarin()) {\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(150,210-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,400-32);\r\n                    Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n                    ImageHolder.add(new ViewStone(i, randomNumX, randomNumY, 1, ciz_stone));\r\n                }\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(150,210-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,385-16);\r\n                    Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n                    ImageHolder.add(new ViewStone(i, randomNumX, randomNumY, 2, ciz_stone));\r\n                }\r\n            }\r\n            else if (i<6){\r\n                step_x=step_x+110;\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-16);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,320-16);\r\n                    Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n                    ImageHolder.add(new ViewStone(i, randomNumX, randomNumY, 2, ciz_stone));\r\n                }\r\n            }\r\n            else if (i==6) {\r\n                step_x=step_x+110;\r\n                MandarinSquare new_square = (MandarinSquare) squares.get(i);\r\n                if (new_square.isContainMandarin()) {\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,400-32);\r\n                    Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n                    ImageHolder.add(new ViewStone(i, randomNumX, randomNumY, 1, ciz_stone));\r\n                }\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,385-16);\r\n                    Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n                    ImageHolder.add(new ViewStone(i, randomNumX, randomNumY, 2, ciz_stone));\r\n                }\r\n            }\r\n            else {\r\n                step_x=step_x-110;\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-16);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(395,445-16);\r\n                    Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n                    ImageHolder.add(new ViewStone(i, randomNumX, randomNumY, 2, ciz_stone));\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void setup(){\r\n        this.ciz_stones = new ArrayList<>();\r\n        this.stoneImages = new ArrayList<>();\r\n        this.stoneImages.add(\"gui/asset/CizStone1.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone2.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone3.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone4.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone5.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone6.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone7.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone8.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone9.png\");\r\n        this.stoneImages.add(\"gui/asset/CizStone10.png\");\r\n\r\n        for (String image : this.stoneImages) {\r\n            Image stone = new Image(getClass().getResource(image).toExternalForm());\r\n            this.ciz_stones.add(stone);\r\n        }\r\n\r\n        this.MPlayer =  new Utils(new File(\"gui/asset/soundtrack_2.mp3\").toURI().toString());\r\n        CitizenSquare CS1 = new CitizenSquare(1, 0);\r\n        CitizenSquare CS2 = new CitizenSquare(2, 0);\r\n        CitizenSquare CS3 = new CitizenSquare(3, 0);\r\n        CitizenSquare CS4 = new CitizenSquare(4, 0);\r\n        CitizenSquare CS5 = new CitizenSquare(5, 0);\r\n        CitizenSquare CS7 = new CitizenSquare(7, 0);\r\n        CitizenSquare CS8= new CitizenSquare(8, 0);\r\n        CitizenSquare CS9 = new CitizenSquare(9, 1);\r\n        CitizenSquare CS10 = new CitizenSquare(10, 0);\r\n        CitizenSquare CS11 = new CitizenSquare(11, 0);\r\n\r\n        MandarinSquare MQ0=  new MandarinSquare(0, 0, false);\r\n        MandarinSquare MQ6=  new MandarinSquare(6, 0, true);\r\n        squares = new ArrayList<BoardSquare>();\r\n        squares.add(MQ0);\r\n        squares.add(CS1);\r\n        squares.add(CS2);\r\n        squares.add(CS3);\r\n        squares.add(CS4);\r\n        squares.add(CS5);\r\n        squares.add(MQ6);\r\n        squares.add(CS7);\r\n        squares.add(CS8);\r\n        squares.add(CS9);\r\n        squares.add(CS10);\r\n        squares.add(CS11);\r\n        Board MainBoard =  new Board(squares);\r\n        Player player1 =  new Player(1,0);\r\n        Player player2 = new Player(2,0);\r\n        Player botPlayer = new MinimaxBot(2, 0);\r\n        MainGame =  new Game(MainBoard,player1,botPlayer, true);\r\n\r\n        loadImageHolder();\r\n\r\n        ArrayList<BoardSquare> validsquare1 = new ArrayList<BoardSquare>();\r\n        validsquare1.add(CS11);\r\n        validsquare1.add(CS10);\r\n        validsquare1.add(CS9);\r\n        validsquare1.add(CS8);\r\n        validsquare1.add(CS7);\r\n        player1.setValidBoardSquare(validsquare1);\r\n\r\n        ArrayList<BoardSquare> validsquare2 = new ArrayList<BoardSquare>();\r\n        validsquare2.add(CS1);\r\n        validsquare2.add(CS2);\r\n        validsquare2.add(CS3);\r\n        validsquare2.add(CS4);\r\n        validsquare2.add(CS5);\r\n        player2.setValidBoardSquare(validsquare2);\r\n        botPlayer.setValidBoardSquare(validsquare2);\r\n\r\n        Image img = new Image(getClass().getResource(\"gui/asset/anim1.png\").toExternalForm());\r\n        this.take_animation.add(img);\r\n        this.drop_animation.add(img);\r\n        img = new Image(getClass().getResource(\"gui/asset/anim1.png\").toExternalForm());\r\n        this.take_animation.add(img);\r\n        img = new Image(getClass().getResource(\"gui/asset/anim6.png\").toExternalForm());\r\n        this.take_animation.add(img);\r\n        this.drop_animation.add(img);\r\n        img = new Image(getClass().getResource(\"gui/asset/anim4.png\").toExternalForm());\r\n        this.take_animation.add(img);\r\n        this.drop_animation.add(img);\r\n        img = new Image(getClass().getResource(\"gui/asset/anim5.png\").toExternalForm());\r\n        this.take_animation.add(img);\r\n        this.drop_animation.add(img);\r\n        img = new Image(getClass().getResource(\"gui/asset/anim3.png\").toExternalForm());\r\n        this.take_animation.add(img);\r\n        this.drop_animation.add(img);\r\n        this.drop_animation.add(img);\r\n    }\r\n\r\n\r\n\r\n    public void ShowInvalidMove(int player_id) {\r\n        JOptionPane.showMessageDialog(null, \"Please choose another square\", \"Invalid chosen square\", JOptionPane.ERROR_MESSAGE);\r\n    }\r\n\r\n    public void take(int squareID) {\r\n        this.takeID =  squareID;\r\n       int coordX;\r\n       int coordY;\r\n       if (squareID==0){\r\n           coordX = 200;\r\n           coordY = 400;\r\n       }\r\n       else if (squareID ==6){\r\n           coordX =  850;\r\n           coordY = 400;\r\n       }\r\n       else if(squareID>0 && squareID <6){\r\n           coordX =  280 + (squareID - 1) * 110;\r\n           coordY =  385;\r\n       }\r\n       else {\r\n           coordX =  280 + (11 - squareID)*110;\r\n           coordY =  485;\r\n       }\r\n       this.take_animation_slide--;\r\n       Image img =  this.take_animation.get(this.take_animation_slide);\r\n       gc.drawImage(img,coordX-img.getWidth(), coordY-img.getHeight(),img.getWidth(),img.getHeight());\r\n    }\r\n\r\n    public void drop(int squareID) {\r\n        this.dropID =  squareID;\r\n        int coordX;\r\n        int coordY;\r\n        if (squareID==0){\r\n            coordX = 200;\r\n            coordY = 400;\r\n        }\r\n        else if (squareID ==6){\r\n            coordX =  850;\r\n            coordY = 400;\r\n        }\r\n        else if(squareID>0 && squareID <6){\r\n            coordX =  280 + (squareID -1)*110;\r\n            coordY =  385;\r\n        }\r\n        else {\r\n            coordX =  280 + (11 - squareID)*110;\r\n            coordY =  485;\r\n        }\r\n        Image img =  this.drop_animation.get(this.drop_animation_slide);\r\n        this.drop_animation_slide++;\r\n        gc.drawImage(img,coordX- img.getWidth(), coordY-img.getHeight(),img.getWidth(),img.getHeight());\r\n    }\r\n\r\n    public void chooseDirection(Player player, int id) {\r\n        JPanel direction_panel = new JPanel();\r\n        JLabel label1 = new JLabel(\"What directions do you want to choose?\");\r\n        JButton buttonLeft = new JButton(\"Left\");\r\n        JButton buttonRight = new JButton(\"Right\");\r\n\r\n        frame = new JFrame(\"Choose directions\");\r\n        direction_panel.add(label1);\r\n        direction_panel.add(buttonLeft);\r\n        direction_panel.add(buttonRight);\r\n        frame.add(direction_panel);\r\n        frame.setSize(300, 100);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setVisible(true);\r\n        if(player.getPlayerID()==1) {\r\n            buttonLeft.addActionListener(new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if (e.getSource() == buttonLeft) {\r\n                        frame.setVisible(false);\r\n                        makeMove(MainGame.getMyBoard(), id, true, player);\r\n                    }\r\n                }\r\n            });\r\n            buttonRight.addActionListener(new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if (e.getSource() == buttonRight) {\r\n                        frame.setVisible(false);\r\n                        makeMove(MainGame.getMyBoard(), id, false, player);\r\n\r\n                    }\r\n                }\r\n            });\r\n        }else {\r\n            buttonLeft.addActionListener(new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if (e.getSource() == buttonLeft) {\r\n                        frame.setVisible(false);\r\n                        makeMove(MainGame.getMyBoard(), id, false, player);\r\n                    }\r\n                }\r\n            });\r\n            buttonRight.addActionListener(new ActionListener() {\r\n                @Override\r\n                public void actionPerformed(ActionEvent e) {\r\n                    if (e.getSource() == buttonRight) {\r\n                        frame.setVisible(false);\r\n                        makeMove(MainGame.getMyBoard(), id, true, player);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public void ChoosePivot(int id) {\r\n        if (MainGame.isP1Turn()) {\r\n            if (MainGame.getPlayer1().isValidMove(MainGame.getMyBoard(), id)) {\r\n                chooseDirection(MainGame.getPlayer1(), id);\r\n            } else {\r\n                System.out.println(\"Invalid Move player 1\");\r\n                ShowInvalidMove(1);\r\n            }\r\n        } else {\r\n            if(MainGame.getPlayer2() instanceof MinimaxBot) {\r\n            \tMinimaxBot bot = (MinimaxBot) MainGame.getPlayer2();\r\n                mainTimeline.stop();\r\n                System.out.println(\"Interrupted\");\r\n            \tint chosenMovement = bot.makeHardBotMove(MainGame.getMyBoard());\r\n                mainTimeline.play();\r\n            \tif(chosenMovement%2==0) {\r\n            \t\tint chosenSquareID = chosenMovement/2;\r\n            \t\tconfirmBotMove(bot, chosenSquareID, false);\r\n            \t}else {\r\n            \t\tint chosenSquareID = chosenMovement/2;\r\n            \t\tconfirmBotMove(bot, chosenSquareID, true);\r\n            \t}\r\n            }else {\r\n            \tif (MainGame.getPlayer2().isValidMove(MainGame.getMyBoard(), id)) {\r\n                    chooseDirection(MainGame.getPlayer2(), id);            }\r\n                else {\r\n                    System.out.println(\"Invalid Move player 2\");\r\n                    ShowInvalidMove(2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    public void confirmBotMove(MinimaxBot bot, int chosenSquareID, boolean isMoveLeft) {\r\n    \tJPanel direction_panel = new JPanel();\r\n        JLabel label1 = new JLabel(\"*********Start the bot turn?*********\");\r\n        JButton button = new JButton(\"Confirm!\");\r\n\r\n        frame = new JFrame(\"Confirm bot movement\");\r\n        direction_panel.add(label1);\r\n        direction_panel.add(button);\r\n        frame.add(direction_panel);\r\n        frame.setSize(300, 100);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setVisible(true);\r\n        button.addActionListener(new ActionListener() {\r\n\r\n\t\t\t@Override\r\n\t\t\tpublic void actionPerformed(ActionEvent e) {\r\n\t\t\t\t// TODO Auto-generated method stub\r\n\t\t\t\tif(e.getSource()==button) {\r\n\t\t\t\t\tframe.setVisible(false);\r\n\t\t\t\t\tmakeMove(MainGame.getMyBoard(), chosenSquareID, isMoveLeft, bot);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t});\r\n//\r\n    }\r\n\r\n\r\n    public void collectCitizen(int squareID){\r\n        for ( int i= ImageHolder.size()-1;i>=0;i--){\r\n            if (ImageHolder.get(i).square_id== squareID){\r\n                if (ImageHolder.get(i).type==2) gc.clearRect(ImageHolder.get(i).coordX, ImageHolder.get(i).coordY, 16,16);\r\n                else gc.clearRect(ImageHolder.get(i).coordX, ImageHolder.get(i).coordY, 32,32);\r\n                ImageHolder.remove(i);\r\n            }\r\n        }\r\n        this.take_animation_slide=6;\r\n        take(squareID);\r\n    }\r\n    public void distributeCitizen(int squareID, boolean onDispatch){\r\n        if (squareID==0) {\r\n            int randomNumX = ThreadLocalRandom.current().nextInt(150,210-32);\r\n            int randomNumY = ThreadLocalRandom.current().nextInt(350,400-32);\r\n            Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n            ImageHolder.add(new ViewStone(squareID, randomNumX, randomNumY, 2, ciz_stone));\r\n        }\r\n        else if (squareID<6){\r\n            int randomNumX = ThreadLocalRandom.current().nextInt(150+ squareID* 110, 210+ squareID*110-32);\r\n            int randomNumY = ThreadLocalRandom.current().nextInt(265, 400-32);\r\n            Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n            ImageHolder.add(new ViewStone(squareID, randomNumX, randomNumY, 2, ciz_stone));\r\n        }\r\n        else if (squareID==6) {\r\n            int randomNumX = ThreadLocalRandom.current().nextInt(150 + squareID * 110, 150 + squareID * 110 + 50 - 32);\r\n            int randomNumY = ThreadLocalRandom.current().nextInt(350, 400 - 32);\r\n            Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n            ImageHolder.add(new ViewStone(squareID, randomNumX, randomNumY, 2, ciz_stone));\r\n        }\r\n        else {\r\n            int randomNumX = ThreadLocalRandom.current().nextInt(150+ (12-squareID)*110,150+(12-squareID)*110+50-16);\r\n            int randomNumY = ThreadLocalRandom.current().nextInt(395,445-16);\r\n            Image ciz_stone = this.ciz_stones.get(ThreadLocalRandom.current().nextInt(0, 9));\r\n            ImageHolder.add(new ViewStone(squareID, randomNumX, randomNumY, 2, ciz_stone));\r\n        }\r\n        if (!onDispatch){\r\n        this.drop_animation_slide =0;\r\n        drop(squareID);}\r\n    }\r\n\r\n    public void dispatchCitizens(Board b, Player player) {\r\n        boolean flag = false;\r\n        int currentSquareID;\r\n        BoardSquare currentSquare;\r\n        for (BoardSquare i : player.getValidBoardSquare()) {\r\n            currentSquareID = i.getboardSquareID();\r\n            if (b.getListOfSquare().get(currentSquareID).isEmpty() == false) {\r\n                flag = true;\r\n            }\r\n        }\r\n\r\n        // Dispatch the previous-won citizens when there are not any non-empty citizen squares\r\n        ArrayList<BoardSquare> listOfSquare = b.getListOfSquare();\r\n        if (flag == false) {\r\n            player.setPoint(player.getPoint()-5);\r\n            for (BoardSquare i : player.getValidBoardSquare()) {\r\n                currentSquareID = i.getboardSquareID();\r\n                currentSquare = listOfSquare.get(currentSquareID);\r\n                currentSquare.setNumberOfCitizens(1);\r\n                listOfSquare.set(currentSquareID, currentSquare);\r\n                distributeCitizen(currentSquareID,true);\r\n            }\r\n            b.setListOfSquare(listOfSquare);\r\n        }\r\n        System.out.println(\"Dispatch citizen of player \" + player.getPlayerID());\r\n    }\r\n    public void makeMove(Board b, int choosenSquareID, boolean isLeftMove, Player player) {\r\n        // Start to make move\r\n        ArrayList<BoardSquare> bss = b.getListOfSquare();\r\n        BoardSquare choosenSquare = b.getListOfSquare().get(choosenSquareID);\r\n        int citizens = choosenSquare.getNumberOfCitizens();\r\n        int currentSquareID = choosenSquareID;\r\n        choosenSquare.setNumberOfCitizens(0);\r\n        collectCitizen(currentSquareID);\r\n        try{\r\n            Thread.sleep(600);}\r\n        catch(InterruptedException e) {\r\n            System.out.println(\"Error@##\");\r\n        }\r\n        bss.set(currentSquareID, choosenSquare);\r\n\r\n        while(citizens>0) {\r\n            System.out.println(citizens);\r\n            try{\r\n                Thread.sleep(600);}\r\n            catch(InterruptedException e) {\r\n                System.out.println(\"Error@##\");\r\n            }\r\n\r\n            citizens--;\r\n            if(isLeftMove == true) {\r\n                if(currentSquareID == 11) currentSquareID = 0;\r\n                else currentSquareID++;\r\n                bss.get(currentSquareID).setNumberOfCitizens(bss.get(currentSquareID).getNumberOfCitizens()+1);\r\n            }else {\r\n                if(currentSquareID == 0) currentSquareID = 11;\r\n                else currentSquareID--;\r\n                bss.get(currentSquareID).setNumberOfCitizens(bss.get(currentSquareID).getNumberOfCitizens()+1);\r\n            }\r\n            distributeCitizen(currentSquareID,false);\r\n\r\n            // decide if the turn is continued or stopped (get point or not)\r\n            if(citizens==0) {\r\n                if(isLeftMove == true) {\r\n                    if(currentSquareID == 11) currentSquareID = 0;\r\n                    else currentSquareID++;\r\n                    // Capture or continue the turn\r\n\r\n                    boolean flag = true;\r\n\r\n                    while(bss.get(currentSquareID).isEmpty()) {\r\n                        System.out.println(\"Capture square\");\r\n                        int targetSquareID;\r\n                        if(currentSquareID == 11) targetSquareID = 0;\r\n                        else targetSquareID = currentSquareID+1;\r\n                        if(bss.get(targetSquareID).isEmpty()==false) {\r\n                            player.captureSquare(bss, currentSquareID, isLeftMove);\r\n                            try{\r\n                                Thread.sleep(600);}\r\n                            catch(InterruptedException e) {\r\n                                System.out.println(\"Error@##\");\r\n                            }\r\n                            collectCitizen(targetSquareID);\r\n                            if(currentSquareID==11) currentSquareID = 1;\r\n                            else if(currentSquareID == 10) currentSquareID = 0;\r\n                            else currentSquareID += 2;\r\n                        }else break;\r\n                        flag = false;\r\n\r\n                    }\r\n                    if(flag == false) break;\r\n\r\n                    if(bss.get(currentSquareID) instanceof CitizenSquare) {\r\n                        System.out.println(\"Continue\");\r\n                        BoardSquare currentSquare = (CitizenSquare) bss.get(currentSquareID);\r\n                        citizens = currentSquare.getNumberOfCitizens();\r\n                        try{\r\n                            Thread.sleep(600);}\r\n                        catch(InterruptedException e) {\r\n                            System.out.println(\"Error@##\");\r\n                        }\r\n                        if (!bss.get(currentSquareID).isEmpty())\r\n                            collectCitizen(currentSquareID);\r\n                        currentSquare.setNumberOfCitizens(0);\r\n                        bss.set(currentSquareID, currentSquare);\r\n                    }\r\n                }else {\r\n                    if(currentSquareID == 0) currentSquareID = 11;\r\n                    else currentSquareID--;\r\n                    // Capture or continue the turn\r\n\r\n                    boolean flag = true;\r\n                    while(bss.get(currentSquareID).isEmpty()) {\r\n                        System.out.println(\"Capture square\");\r\n                        int targetSquareID;\r\n                        if(currentSquareID == 0) targetSquareID = 11;\r\n                        else targetSquareID = currentSquareID-1;\r\n                        if(bss.get(targetSquareID).isEmpty()==false) {\r\n                            player.captureSquare(bss, currentSquareID, isLeftMove);\r\n                            try{\r\n                                Thread.sleep(600);}\r\n                            catch(InterruptedException e) {\r\n                                System.out.println(\"Error@##\");\r\n                            }\r\n                            collectCitizen(targetSquareID);\r\n                            if(currentSquareID==1) currentSquareID = 11;\r\n                            else if(currentSquareID == 0) currentSquareID = 10;\r\n                            else currentSquareID -= 2;\r\n                        }else break;\r\n                        flag = false;\r\n                    }\r\n                    if(flag == false) break;\r\n\r\n                    if(bss.get(currentSquareID) instanceof CitizenSquare) {\r\n                        System.out.println(\"Continue\");\r\n                        BoardSquare currentSquare = (CitizenSquare) bss.get(currentSquareID);\r\n                        citizens = currentSquare.getNumberOfCitizens();\r\n                        try{\r\n                            Thread.sleep(600);}\r\n                        catch(InterruptedException e) {\r\n                            System.out.println(\"Error@##\");\r\n                        }\r\n                        if (!bss.get(currentSquareID).isEmpty())\r\n                            collectCitizen(currentSquareID);\r\n                        currentSquare.setNumberOfCitizens(0);\r\n                        bss.set(currentSquareID, currentSquare);\r\n                    }\r\n                }\r\n            }\r\n            System.out.print(currentSquareID + \" \");\r\n\r\n            ArrayList<BoardSquare> listOfSquares = bss;\r\n            for(BoardSquare i : listOfSquares) {\r\n                if(i.getboardSquareID()==0) {\r\n                    MandarinSquare ms0 = (MandarinSquare) i;\r\n                    System.out.print(\" ( \" + ms0.getNumberOfCitizens() + \" \" + Boolean.toString(ms0.isContainMandarin()) + \" (\" + ms0.getboardSquareID() + \") | \");\r\n                }else if(i.getboardSquareID()==6) {\r\n                    MandarinSquare ms6 = (MandarinSquare) i;\r\n                    System.out.println(\"\" + ms6.getNumberOfCitizens() + \" \" + Boolean.toString(ms6.isContainMandarin()) + \" (\" + ms6.getboardSquareID() + \") ) \");\r\n                    System.out.print(\"\\t\\t\");\r\n                }else if(i.getboardSquareID()>=1 && i.getboardSquareID() <= 5) {\r\n                    System.out.print(i.getNumberOfCitizens() + \" (\" + i.getboardSquareID() + \") | \");\r\n                }else break;\r\n            }\r\n            for(int i = 11; i >= 7; i--) {\r\n                BoardSquare cb = bss.get(i);\r\n                System.out.print(cb.getNumberOfCitizens() + \" (\" + cb.getboardSquareID() + \") | \");\r\n            }\r\n            System.out.println(\"\\n\");\r\n\r\n        }\r\n        System.out.println();\r\n\r\n        b.setListOfSquare(bss);\r\n\r\n        if(MainGame.isEndGame()) {\r\n            endGameDialog();\r\n            // Collect all the remaining citizens of player's valid squares\r\n            for(int i = 1; i <= 5; i++) {\r\n            \tif(!MainGame.getMyBoard().getListOfSquare().get(i).isEmpty()) {\r\n            \t\tMainGame.getPlayer2().setPoint(MainGame.getPlayer2().getPoint()\r\n            \t\t\t\t+ MainGame.getMyBoard().getListOfSquare().get(i).getNumberOfCitizens());\r\n            \t\tMainGame.getMyBoard().getListOfSquare().get(i).setNumberOfCitizens(0);\r\n            \t\tcollectCitizen(i);\r\n            \t}\r\n            }\r\n            for(int i = 7; i <= 11; i++) {\r\n            \tif(!MainGame.getMyBoard().getListOfSquare().get(i).isEmpty()) {\r\n            \t\tMainGame.getPlayer1().setPoint(MainGame.getPlayer1().getPoint()\r\n            \t\t\t\t+ MainGame.getMyBoard().getListOfSquare().get(i).getNumberOfCitizens());\r\n            \t\tMainGame.getMyBoard().getListOfSquare().get(i).setNumberOfCitizens(0);\r\n            \t\tcollectCitizen(i);\r\n            \t}\r\n            }\r\n            return;\r\n        }\r\n\r\n        if(MainGame.getPlayer1().equals(player)) {\r\n            MainGame.setP1Turn(false);\r\n            dispatchCitizens(b, MainGame.getPlayer2());\r\n        }else {\r\n            MainGame.setP1Turn(true);\r\n            dispatchCitizens(b, MainGame.getPlayer1());\r\n        }\r\n\r\n        System.out.println(\"End make move\");\r\n    }\r\n\r\n    public void endGameDialog() {\r\n        JPanel dialog_panel = new JPanel();\r\n        Player player = MainGame.winningPlayer();\r\n        JLabel label1;\r\n        if(player!=null) {\r\n            label1 = new JLabel(\"Player \" + player.getPlayerID() + \" has won\");\r\n        }else {\r\n            label1 = new JLabel(\"*********** Draw **********\");\r\n\r\n        }\r\n\r\n        JPanel buttonPanel = new JPanel();\r\n        JButton buttonLeft = new JButton(\"Restart\");\r\n        JButton buttonRight = new JButton(\"Quit game\");\r\n        buttonPanel.add(buttonLeft);\r\n        buttonPanel.add(buttonRight);\r\n        frame = new JFrame(\"End Game\");\r\n\r\n        dialog_panel.add(label1);\r\n        dialog_panel.add(buttonPanel);\r\n        frame.add(dialog_panel);\r\n        frame.setSize(300, 100);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setVisible(true);\r\n\r\n        buttonLeft.addActionListener(new ActionListener() {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                // TODO Auto-generated method stub\r\n                if(e.getSource()==buttonLeft) {\r\n                    frame.setVisible(false);\r\n                    MainGame.restart();\r\n                    ImageHolder.clear();\r\n                    loadImageHolder();\r\n                    \r\n\r\n                    Platform.runLater(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            // do your GUI stuff here\r\n                            stage.setScene(scene2);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        buttonRight.addActionListener(new ActionListener() {\r\n\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                // TODO Auto-generated method stub\r\n                if(e.getSource()==buttonRight) {\r\n                    frame.setVisible(false);\r\n                    MainGame.restart();\r\n                    ImageHolder.clear();\r\n                    loadImageHolder();\r\n                    MPlayer.mediaPlayer.stop();\r\n                    Platform.runLater(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            // do your GUI stuff here\r\n                            stage.setScene(scene1);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    private class CitizenSquareUI extends StackPane{\r\n        CitizenSquareUI(String name, Runnable action,int width, int height, int id) {\r\n            LinearGradient gradient = new LinearGradient(0, 0.5, 1, 0.5, true, CycleMethod.NO_CYCLE,\r\n                    new Stop(0.1, Color.web(\"black\", 0.75)),\r\n                    new Stop(1.0, Color.web(\"black\", 0.15))\r\n            );\r\n\r\n            Rectangle bg = new Rectangle(width, height);\r\n            Text text = new Text(\"Square number: \"+ id);\r\n            text.setFont(Font.font(12.0));\r\n            text.fillProperty().bind(\r\n                    Bindings.when(bg.hoverProperty()).then(Color.GRAY).otherwise(Color.TRANSPARENT)\r\n            );\r\n            bg.fillProperty().bind(\r\n                    Bindings.when(hoverProperty()).then(Color.TRANSPARENT).otherwise(Color.TRANSPARENT)\r\n            );\r\n            setOnMouseClicked(e -> action.run());\r\n\r\n            getChildren().addAll(bg, text);\r\n        }\r\n\r\n    }\r\n    private Pane createStartMenu() {\r\n        Pane root = new Pane();\r\n        root.setPrefSize(1080,720);\r\n        Image bgImage =  new Image(getClass().getResource(\"gui/asset/MenuScene.png\").toExternalForm());\r\n\r\n//         START button\r\n        Image startImage = new Image(\"gui/asset/START.png\");\r\n        ImageView startView = new ImageView(startImage);\r\n        Image startImage2 = new Image(\"gui/asset/START2.png\");\r\n        ImageView startView2 = new ImageView(startImage2);\r\n\r\n        startView.setFitHeight(80);\r\n        startView.setFitWidth(200);\r\n        startView2.setFitHeight(80);\r\n        startView2.setFitWidth(200);\r\n\r\n        Button startButton = new Button();\r\n        startButton.setTranslateX(645);\r\n        startButton.setTranslateY(200);\r\n        startButton.setPrefSize(80,80);\r\n        startButton.setStyle(\"-fx-background-color: #ffffff00;\");\r\n        startButton.setGraphic(startView);\r\n\r\n        startButton.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n            if (show) {\r\n                startButton.setGraphic(startView2);\r\n            } else {\r\n                startButton.setGraphic(startView);\r\n            }\r\n        });\r\n        startButton.setOnAction(event-> {stage.setScene(scene2); this.MPlayer.mediaPlayer.play();});\r\n\r\n\r\n        Image helpImage = new Image(\"gui/asset/HELP.png\");\r\n        ImageView helpView = new ImageView(helpImage);\r\n        Image helpImage2 = new Image(\"gui/asset/HELP2.png\");\r\n        ImageView helpView2 = new ImageView(helpImage2);\r\n\r\n        helpView.setFitHeight(80);\r\n        helpView.setFitWidth(200);\r\n        helpView2.setFitHeight(80);\r\n        helpView2.setFitWidth(200);\r\n\r\n        Button helpButton = new Button();\r\n        helpButton.setTranslateX(650);\r\n        helpButton.setTranslateY(300);\r\n        helpButton.setPrefSize(80,80);\r\n        helpButton.setStyle(\"-fx-background-color: #ffffff00;\");\r\n        helpButton.setGraphic(helpView);\r\n\r\n        helpButton.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n            if (show) {\r\n                helpButton.setGraphic(helpView2);\r\n            } else {\r\n                helpButton.setGraphic(helpView);\r\n            }\r\n        });\r\n        helpButton.setOnAction(event-> {\r\n            stage.setScene(scene3);\r\n\r\n            // transition of rule board\r\n            TranslateTransition boardTransition = new TranslateTransition(Duration.seconds(1), ((Pane)scene3.getRoot()).getChildren().get(1));\r\n            boardTransition.setByY(500);\r\n            boardTransition.setInterpolator(Interpolator.EASE_OUT);\r\n            boardTransition.play();\r\n\r\n            // move to next rule\r\n            TranslateTransition rightTransition = new TranslateTransition(Duration.seconds(1), ((Pane)scene3.getRoot()).getChildren().get(2));\r\n            rightTransition.setInterpolator(Interpolator.EASE_OUT);\r\n            rightTransition.setByY(500);\r\n            rightTransition.play();\r\n        });\r\n\r\n\r\n        Image exitImage = new Image(\"gui/asset/EXIT.png\");\r\n        ImageView exitView = new ImageView(exitImage);\r\n        Image exitImage2 = new Image(\"gui/asset/EXIT2.png\");\r\n        ImageView exitView2 = new ImageView(exitImage2);\r\n\r\n        exitView.setFitHeight(80);\r\n        exitView.setFitWidth(200);\r\n        exitView2.setFitHeight(80);\r\n        exitView2.setFitWidth(200);\r\n\r\n        Button exitButton = new Button();\r\n        exitButton.setTranslateX(650);\r\n        exitButton.setTranslateY(400);\r\n        exitButton.setPrefSize(80,80);\r\n        exitButton.setStyle(\"-fx-background-color: #ffffff00;\");\r\n        exitButton.setGraphic(exitView);\r\n\r\n        exitButton.hoverProperty().addListener((ObservableValue<? extends Boolean> observable, Boolean oldValue, Boolean show) -> {\r\n            if (show) {\r\n                exitButton.setGraphic(exitView2);\r\n            } else {\r\n                exitButton.setGraphic(exitView);\r\n            }\r\n        });\r\n        exitButton.setOnAction(event -> {Platform.exit();});\r\n        root.getChildren().addAll(\r\n                new ImageView(bgImage),\r\n                startButton,\r\n                helpButton,\r\n                exitButton\r\n        );\r\n        return root;\r\n    }\r\n    public void setStartGame(boolean status){\r\n        this.startGame=status;\r\n        if (!status){\r\n            stage.setScene(scene1);\r\n        }\r\n        else{\r\n            stage.setScene(scene2);\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        launch(args);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Menu.java b/src/Menu.java
--- a/src/Menu.java	(revision 404d5790f24d5262cf530f5203577ea303c78782)
+++ b/src/Menu.java	(date 1718419080715)
@@ -832,7 +832,7 @@
             this.ciz_stones.add(stone);
         }
 
-        this.MPlayer =  new Utils(new File("gui/asset/soundtrack_2.mp3").toURI().toString());
+        this.MPlayer =  new Utils(new File("src/gui/asset/soundtrack_2.mp3").toURI().toString());
         CitizenSquare CS1 = new CitizenSquare(1, 0);
         CitizenSquare CS2 = new CitizenSquare(2, 0);
         CitizenSquare CS3 = new CitizenSquare(3, 0);
@@ -1266,6 +1266,7 @@
                         bss.set(currentSquareID, currentSquare);
                     }
                 }
+
             }
             System.out.print(currentSquareID + " ");
 
Index: .idea/libraries/lib.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"lib\">\r\n    <CLASSES>\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx-swt.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.base.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.controls.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.fxml.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.graphics.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.media.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.swing.jar!/\" />\r\n      <root url=\"jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.web.jar!/\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES />\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/lib.xml b/.idea/libraries/lib.xml
--- a/.idea/libraries/lib.xml	(revision 404d5790f24d5262cf530f5203577ea303c78782)
+++ b/.idea/libraries/lib.xml	(date 1718418968532)
@@ -1,16 +1,10 @@
 <component name="libraryTable">
   <library name="lib">
     <CLASSES>
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx-swt.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.base.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.controls.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.fxml.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.graphics.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.media.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.swing.jar!/" />
-      <root url="jar://$PROJECT_DIR$/../JavaFX/FX/javafx-sdk-17.0.11/lib/javafx.web.jar!/" />
+      <root url="file://$PROJECT_DIR$/../../openjfx-22.0.1_windows-x64_bin-sdk (1)/javafx-sdk-22.0.1/lib" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
+    <jarDirectory url="file://$PROJECT_DIR$/../../openjfx-22.0.1_windows-x64_bin-sdk (1)/javafx-sdk-22.0.1/lib" recursive="false" />
   </library>
 </component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 404d5790f24d5262cf530f5203577ea303c78782)
+++ b/.idea/misc.xml	(date 1718418764973)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e1cb5f09-1c33-426a-a423-5e922d744247\" name=\"Changes\" comment=\"Adding GUI\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/lib.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/lib.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_2_26_PM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_2_26_PM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_18_PM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_18_PM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_21_PM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_21_PM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_02_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_02_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_34_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_34_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_1.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_37_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_37_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_45_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_45_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_7_2024_1_08_AM_[Changes]/shelved.patch\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_7_2024_1_08_AM__Changes_.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Menu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"JavaFXApplication\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Demo1\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ge3SKYRISoZPt4HtjBQPTMLIeD\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Menu.executor\": \"Run\",\r\n    \"Application.Unnamed.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"gui\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"D:/NewGit\",\r\n    \"onboarding.tips.debug.path\": \"D:/MandarinSquare/src/Main.java\",\r\n    \"project.structure.last.edited\": \"Libraries\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\New folder (3)\\OOP-labs\\src\\gui\\asset\" />\r\n      <recent name=\"D:\\MandarinSquare\\Design\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\New folder (3)\\OOP-labs\\src\\gui\\asset\" />\r\n      <recent name=\"C:\\Users\\admin\\Documents\\GitHub\\OOP-labs\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Menu\">\r\n    <configuration name=\"Menu\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"C:/Program Files/Java/jdk-22\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Menu\" />\r\n      <module name=\"MandarinSquare\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;D:\\JavaFX\\openjfx-22.0.1_windows-x64_bin-sdk\\javafx-sdk-22.0.1\\lib&quot; --add-modules javafx.controls,javafx.media,javafx.fxml\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Unnamed\" type=\"JarApplication\" nameIsGenerated=\"true\">\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;C:\\Users\\admin\\Downloads\\openjfx-17.0.11_windows-x64_bin-sdk\\javafx-sdk-17.0.11\\lib&quot; --add-modules javafx.controls,javafx.fxml\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"C:\\Users\\admin\\Documents\\GitHub\\OOP-labs\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Unnamed\" type=\"Remote\" nameIsGenerated=\"true\">\r\n      <module name=\"MandarinSquare\" />\r\n      <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\r\n      <option name=\"SERVER_MODE\" value=\"false\" />\r\n      <option name=\"SHMEM_ADDRESS\" />\r\n      <option name=\"HOST\" value=\"localhost\" />\r\n      <option name=\"PORT\" value=\"5005\" />\r\n      <option name=\"AUTO_RESTART\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Menu\" />\r\n      <item itemvalue=\"JAR Application.Unnamed\" />\r\n      <item itemvalue=\"Remote JVM Debug.Unnamed\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-22-openjdk-22-3183f394aec4-bad0321e\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e1cb5f09-1c33-426a-a423-5e922d744247\" name=\"Changes\" comment=\"\" />\r\n      <created>1716044215054</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716044215054</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"controls package\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716189782125</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716189782125</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"update design pattern\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716780845913</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716780845913</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"update design pattern\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717563669755</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717563669755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update design pattern\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717599369998</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717599369998</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717600485082</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717600485082</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717600679719</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717600679719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717692942530</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717692942530</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717941349184</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717941349184</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"controls package\" />\r\n    <MESSAGE value=\"update design pattern\" />\r\n    <MESSAGE value=\"Adding GUI\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding GUI\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 404d5790f24d5262cf530f5203577ea303c78782)
+++ b/.idea/workspace.xml	(date 1718419080895)
@@ -4,25 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e1cb5f09-1c33-426a-a423-5e922d744247" name="Changes" comment="Adding GUI">
+    <list default="true" id="e1cb5f09-1c33-426a-a423-5e922d744247" name="Changes" comment="Adding GUI for leaves">
       <change beforePath="$PROJECT_DIR$/.idea/libraries/lib.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/lib.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_2_26_PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_2_26_PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_18_PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_18_PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_21_PM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_6_2024_3_21_PM__Changes_.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_02_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_02_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_34_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_34_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_36_PM__Changes_1.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_37_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_37_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_45_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_6_9_2024_8_45_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_7_2024_1_08_AM_[Changes]/shelved.patch" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_6_7_2024_1_08_AM__Changes_.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/controls/player/MinimaxBot.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controls/player/MinimaxBot.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -41,7 +28,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="Demo1" />
+        <entry key="$PROJECT_DIR$" value="menu12" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -57,24 +44,24 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Application.Menu.executor": "Run",
-    "Application.Unnamed.executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "gui",
-    "ignore.virus.scanning.warn.message": "true",
-    "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "D:/NewGit",
-    "onboarding.tips.debug.path": "D:/MandarinSquare/src/Main.java",
-    "project.structure.last.edited": "Libraries",
-    "project.structure.proportion": "0.15",
-    "project.structure.side.proportion": "0.2",
-    "settings.editor.selected.configurable": "preferences.JavaFX"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;Application.Menu.executor&quot;: &quot;Run&quot;,
+    &quot;Application.Unnamed.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;gui&quot;,
+    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;D:/openjfx-22.0.1_windows-x64_bin-sdk (1)/javafx-sdk-22.0.1/lib&quot;,
+    &quot;onboarding.tips.debug.path&quot;: &quot;D:/MandarinSquare/src/Main.java&quot;,
+    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,
+    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
+    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
+    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.JavaFX&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="D:\New folder (3)\OOP-labs\src\gui\asset" />
@@ -93,7 +80,7 @@
       <option name="ALTERNATIVE_JRE_PATH" value="C:/Program Files/Java/jdk-22" />
       <option name="MAIN_CLASS_NAME" value="Menu" />
       <module name="MandarinSquare" />
-      <option name="VM_PARAMETERS" value="--module-path &quot;D:\JavaFX\openjfx-22.0.1_windows-x64_bin-sdk\javafx-sdk-22.0.1\lib&quot; --add-modules javafx.controls,javafx.media,javafx.fxml" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;D:\openjfx-22.0.1_windows-x64_bin-sdk (2)\javafx-sdk-22.0.1\lib&quot; --add-modules javafx.controls,javafx.media,javafx.fxml" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -123,6 +110,7 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
         <option value="jdk-22-openjdk-22-3183f394aec4-bad0321e" />
       </set>
     </attachedChunks>
