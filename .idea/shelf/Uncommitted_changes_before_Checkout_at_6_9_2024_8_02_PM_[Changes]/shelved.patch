Index: src/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\nimport controls.Game;\r\nimport controls.board.Board;\r\nimport controls.board.BoardSquare;\r\nimport controls.board.CitizenSquare;\r\nimport controls.board.MandarinSquare;\r\nimport controls.player.Player;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Application;\r\nimport javafx.application.Platform;\r\nimport javafx.beans.binding.Bindings;\r\nimport javafx.scene.canvas.GraphicsContext;\r\nimport javafx.scene.layout.*;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.CycleMethod;\r\nimport javafx.scene.paint.Stop;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.image.ImageView;\r\nimport javafx.scene.paint.LinearGradient;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.canvas.Canvas;\r\nimport javax.swing.*;\r\nimport javax.swing.text.View;\r\n\r\nimport javafx.util.Duration;\r\n\r\n\r\npublic class Menu extends Application{\r\n    public Stage stage;\r\n    public Scene scene1, scene2;\r\n    public Parent layout1, layout2;\r\n    static JFrame frame ;\r\n    public ArrayList<BoardSquare> squares;\r\n    public ArrayList<ViewStone> ImageHolder = new ArrayList<>();\r\n    public Game MainGame;\r\n    public boolean startGame = false;\r\n    private GraphicsContext gc;\r\n\r\n    @Override\r\n    public void start(Stage primarystage) throws Exception {\r\n        layout1= createStartMenu();\r\n        scene1 =  new Scene(layout1);\r\n        stage =primarystage;\r\n        stage.setScene(scene1);\r\n        setup();\r\n        Canvas canvas = new Canvas(1080, 960);\r\n        gc = canvas.getGraphicsContext2D();\r\n        Timeline timeline = new Timeline(new KeyFrame(Duration.millis(200), e -> run(gc)));\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n        timeline.play();\r\n\r\n        stage.show();\r\n\r\n        //layout2 = RenderUI();\r\n        Image bgImage = new Image(getClass().getResource(\"gui/asset/mandarin_background.png\").toExternalForm());\r\n        ImageView img_view =  new ImageView(bgImage);\r\n        img_view.setY(0);\r\n        img_view.setX(0);\r\n        HBox Squares_row1 = new HBox(\r\n                new CitizenSquareUI(\"Square 1\",()->ChoosePivot(1),110,120,1),\r\n                new CitizenSquareUI(\"Square 2\",()->ChoosePivot(2),110,120,2),\r\n                new CitizenSquareUI(\"Square 3\",()->ChoosePivot(3),105,120,3),\r\n                new CitizenSquareUI(\"Square 4\",()->ChoosePivot(4),110,120,4),\r\n                new CitizenSquareUI(\"Square 5\",()->ChoosePivot(5),110,120,5)\r\n        );\r\n\r\n        Squares_row1.setTranslateX(210);\r\n        Squares_row1.setTranslateY(265);\r\n        HBox Squares_row2 = new HBox(\r\n                new CitizenSquareUI(\"Square 11\",()->ChoosePivot(11),110,120,11),\r\n                new CitizenSquareUI(\"Square 10\",()->ChoosePivot(10),110,120,10),\r\n                new CitizenSquareUI(\"Square 9\",()->ChoosePivot(9),105,120,9),\r\n                new CitizenSquareUI(\"Square 8\",()->ChoosePivot(8),110,120,8),\r\n                new CitizenSquareUI(\"Square 7\",()->ChoosePivot(7),110,120,7)\r\n        );\r\n        Squares_row2.setTranslateX(210);\r\n        Squares_row2.setTranslateY(395);\r\n        HBox Mandarin_Square1 = new HBox(\r\n                new CitizenSquareUI(\"Mandarin Square 6\",()->{},110,240,6)\r\n        );\r\n        Mandarin_Square1.setTranslateX(755);\r\n        Mandarin_Square1.setTranslateY(265);\r\n        HBox Mandarin_Square2 = new HBox(\r\n                new CitizenSquareUI(\"Mandarin Square 0\",()->{},110,240,0)\r\n        );\r\n        Mandarin_Square2.setTranslateX(100);\r\n        Mandarin_Square2.setTranslateY(265);\r\n        scene2 = new Scene(new Pane(img_view,canvas,Squares_row1,Squares_row2,Mandarin_Square1,Mandarin_Square2));\r\n\r\n\r\n        System.out.println(\"Running...\");\r\n\r\n\r\n    }\r\n    private void run(GraphicsContext gc){\r\n        if (MainGame.isEndGame()){\r\n            JPanel dialog_panel = new JPanel();\r\n            JLabel label1 = new JLabel(\"The Game has ended\");\r\n            JButton button = new JButton(\"OK\");\r\n            frame = new JFrame(\"End Game\");\r\n\r\n            dialog_panel.add(label1);\r\n            dialog_panel.add(button);\r\n            frame.add(dialog_panel);\r\n            frame.setSize(300, 100);\r\n            frame.setLocationRelativeTo(null);\r\n            frame.setVisible(true);\r\n            try{\r\n                Thread.sleep(500);}\r\n            catch(InterruptedException e) {\r\n                System.out.println(\"Error@##\");\r\n            }\r\n            frame.setVisible(false);\r\n            stage.setScene(scene1);\r\n            MainGame.restart();\r\n\r\n        }\r\n        else {\r\n            Image man_stone = new Image(getClass().getResource(\"gui/asset/bigstone1.png\").toExternalForm());\r\n            Image ciz_stone = new Image(getClass().getResource(\"gui/asset/stone1.png\").toExternalForm());\r\n\r\n            for (ViewStone stone : ImageHolder) {\r\n                if (stone.type == 1) {\r\n                    gc.drawImage(man_stone, stone.coordX, stone.coordY, 32, 32);\r\n                } else {\r\n                    gc.drawImage(ciz_stone, stone.coordX, stone.coordY, 16, 16);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n    public static class ViewStone{\r\n        public int square_id;\r\n        public int coordX;\r\n        public int coordY;\r\n        public int type;\r\n        public ViewStone( int square_id, int coordX, int coordY,int type){\r\n            this.square_id= square_id;\r\n            this.coordX= coordX;\r\n            this.coordY= coordY;\r\n            this.type= type;\r\n        }\r\n    }\r\n    public void setup(){\r\n        CitizenSquare CS1 = new CitizenSquare(1, 5);\r\n        CitizenSquare CS2 = new CitizenSquare(2, 5);\r\n        CitizenSquare CS3 = new CitizenSquare(3, 5);\r\n        CitizenSquare CS4 = new CitizenSquare(4, 5);\r\n        CitizenSquare CS5 = new CitizenSquare(5, 5);\r\n        CitizenSquare CS7 = new CitizenSquare(7, 5);\r\n        CitizenSquare CS8= new CitizenSquare(8, 5);\r\n        CitizenSquare CS9 = new CitizenSquare(9, 5);\r\n        CitizenSquare CS10 = new CitizenSquare(10, 5);\r\n        CitizenSquare CS11 = new CitizenSquare(11, 5);\r\n\r\n        MandarinSquare MQ0=  new MandarinSquare(0, 0, true);\r\n        MandarinSquare MQ6=  new MandarinSquare(6, 0, true);\r\n        squares = new ArrayList<BoardSquare>();\r\n        squares.add(MQ0);\r\n        squares.add(CS1);\r\n        squares.add(CS2);\r\n        squares.add(CS3);\r\n        squares.add(CS4);\r\n        squares.add(CS5);\r\n        squares.add(MQ6);\r\n        squares.add(CS7);\r\n        squares.add(CS8);\r\n        squares.add(CS9);\r\n        squares.add(CS10);\r\n        squares.add(CS11);\r\n        Board MainBoard =  new Board(squares);\r\n        Player player1 =  new Player(1,0);\r\n        Player player2 = new Player(2,0);\r\n        MainGame =  new Game(MainBoard,player1,player2, true);\r\n        int step_x= 100;\r\n        for (int i=0;i<squares.size();i++){\r\n            if (i==0) {\r\n                MandarinSquare new_square = (MandarinSquare) squares.get(i);\r\n                if (new_square.isContainMandarin()) {\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(150,210-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,400-32);\r\n                    ImageHolder.add(new ViewStone(i,randomNumX,randomNumY,1));\r\n                }\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(150,210-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,385-16);\r\n                    ImageHolder.add(new ViewStone(i,randomNumX,randomNumY,2));\r\n                }\r\n            }\r\n            else if (i<6){\r\n                step_x=step_x+110;\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-16);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,320-16);\r\n                    ImageHolder.add(new ViewStone(i,randomNumX,randomNumY,2));\r\n                }\r\n            }\r\n            else if (i==6) {\r\n                step_x=step_x+110;\r\n                MandarinSquare new_square = (MandarinSquare) squares.get(i);\r\n                if (new_square.isContainMandarin()) {\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,400-32);\r\n                    ImageHolder.add(new ViewStone(i,randomNumX,randomNumY,1));\r\n\r\n                }\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-32);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(265,385-16);\r\n                    ImageHolder.add(new ViewStone(i,randomNumX,randomNumY,2));\r\n                }\r\n            }\r\n            else {\r\n                step_x=step_x-110;\r\n                for (int j =1;j<= squares.get(i).getNumberOfCitizens();j++){\r\n                    int randomNumX = ThreadLocalRandom.current().nextInt(step_x,step_x+50-16);\r\n                    int randomNumY = ThreadLocalRandom.current().nextInt(395,445-16);\r\n                    ImageHolder.add(new ViewStone(i,randomNumX,randomNumY,2));\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        ArrayList<BoardSquare> validsquare1 = new ArrayList<BoardSquare>();\r\n        validsquare1.add(CS11);\r\n        validsquare1.add(CS10);\r\n        validsquare1.add(CS9);\r\n        validsquare1.add(CS8);\r\n        validsquare1.add(CS7);\r\n        player1.setValidBoardSquare(validsquare1);\r\n\r\n        ArrayList<BoardSquare> validsquare2 = new ArrayList<BoardSquare>();\r\n        validsquare2.add(CS1);\r\n        validsquare2.add(CS2);\r\n        validsquare2.add(CS3);\r\n        validsquare2.add(CS4);\r\n        validsquare2.add(CS5);\r\n        player2.setValidBoardSquare(validsquare2);\r\n    }\r\n\r\n\r\n\r\n    public void ShowInvalidMove(int player_id) {\r\n        JPanel dialog_panel = new JPanel();\r\n        JLabel label1 = new JLabel(\"Player\" +player_id +\" can only pick the squares in the row below\");\r\n        JButton button = new JButton(\"OK\");\r\n        frame = new JFrame(\"Dialog\");\r\n\r\n        dialog_panel.add(label1);\r\n        dialog_panel.add(button);\r\n        frame.add(dialog_panel);\r\n        frame.setSize(300, 100);\r\n        frame.setLocationRelativeTo(null);\r\n        frame.setVisible(true);\r\n\r\n        button.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                if (e.getSource() == button) {\r\n                    frame.setVisible(false);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void ChoosePivot(int id) {\r\n        if (MainGame.isP1Turn()) {\r\n            if (MainGame.getPlayer1().isValidMove(MainGame.getMyBoard(), id)) {\r\n                JPanel direction_panel = new JPanel();\r\n                JLabel label1 = new JLabel(\"What directions do you want to choose?\");\r\n                JButton buttonLeft = new JButton(\"Left\");\r\n                JButton buttonRight = new JButton(\"Right\");\r\n\r\n                frame = new JFrame(\"Choose directions\");\r\n                direction_panel.add(label1);\r\n                direction_panel.add(buttonLeft);\r\n                direction_panel.add(buttonRight);\r\n                frame.add(direction_panel);\r\n                frame.setSize(300, 100);\r\n                frame.setLocationRelativeTo(null);\r\n                frame.setVisible(true);\r\n                buttonLeft.addActionListener(new ActionListener() {\r\n                    @Override\r\n                    public void actionPerformed(ActionEvent e) {\r\n                        if (e.getSource() == buttonLeft) {\r\n                            frame.setVisible(false);\r\n                            makeMove(MainGame.getMyBoard(), id, true, MainGame.getPlayer1());\r\n                        }\r\n                    }\r\n                });\r\n                buttonRight.addActionListener(new ActionListener() {\r\n                    @Override\r\n                    public void actionPerformed(ActionEvent e) {\r\n                        if (e.getSource() == buttonRight) {\r\n                            frame.setVisible(false);\r\n                            makeMove(MainGame.getMyBoard(), id, false, MainGame.getPlayer1());\r\n\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                ShowInvalidMove(1);\r\n            }\r\n        } else {\r\n            if (MainGame.getPlayer2().isValidMove(MainGame.getMyBoard(), id)) {\r\n                JPanel direction_panel = new JPanel();\r\n                JLabel label1 = new JLabel(\"What directions do you want to choose?\");\r\n                JButton buttonLeft = new JButton(\"Left\");\r\n                JButton buttonRight = new JButton(\"Right\");\r\n\r\n                frame = new JFrame(\"Choose directions\");\r\n                direction_panel.add(label1);\r\n                direction_panel.add(buttonLeft);\r\n                direction_panel.add(buttonRight);\r\n                frame.add(direction_panel);\r\n                frame.setSize(300, 100);\r\n                frame.setLocationRelativeTo(null);\r\n                frame.setVisible(true);\r\n                buttonLeft.addActionListener(new ActionListener() {\r\n                    @Override\r\n                    public void actionPerformed(ActionEvent e) {\r\n                        if (e.getSource() == buttonLeft) {\r\n                            frame.setVisible(false);\r\n                            makeMove(MainGame.getMyBoard(), id, false, MainGame.getPlayer2());\r\n                        }\r\n                    }\r\n                });\r\n                buttonRight.addActionListener(new ActionListener() {\r\n                    @Override\r\n                    public void actionPerformed(ActionEvent e) {\r\n                        if (e.getSource() == buttonRight) {\r\n                            frame.setVisible(false);\r\n                            makeMove(MainGame.getMyBoard(), id, true, MainGame.getPlayer2());\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                ShowInvalidMove(2);\r\n            }\r\n        }\r\n    }\r\n//            else{\r\n//                JPanel direction_panel = new JPanel();\r\n//                JLabel label1 =  new JLabel(\"What directions do you want to choose?\");\r\n//                JButton buttonLeft =  new JButton(\"Left\");\r\n//                JButton buttonRight =  new JButton(\"Right\");\r\n//\r\n//                frame = new JFrame(\"Chooose directions\");\r\n//                direction_panel.add(label1);\r\n//                direction_panel.add(buttonLeft);\r\n//                direction_panel.add(buttonRight);\r\n//                frame.add(direction_panel);\r\n//                frame.setSize(300,100);\r\n//                frame.setLocationRelativeTo(null);\r\n//                frame.setVisible(true);\r\n//                buttonLeft.addActionListener(new ActionListener() {\r\n//                    @Override\r\n//                    public void actionPerformed(ActionEvent e) {\r\n//                        if (e.getSource()==buttonLeft){\r\n//\r\n//                            frame.setVisible(false);\r\n//                        }\r\n//                    }\r\n//                });\r\n//\r\n//                buttonRight.addActionListener(new ActionListener() {\r\n//                    @Override\r\n//                    public void actionPerformed(ActionEvent e) {\r\n//                        if (e.getSource()==buttonRight){\r\n//\r\n//                            frame.setVisible(false);\r\n//                        }\r\n//                    }\r\n//                });\r\n//            }\r\n//\r\n//        }\r\n//\r\n//\r\n    public void collectCitizen(int squareID){\r\n        for ( int i= ImageHolder.size()-1;i>=0;i--){\r\n            if (ImageHolder.get(i).square_id== squareID){\r\n                if (ImageHolder.get(i).type==2) gc.clearRect(ImageHolder.get(i).coordX, ImageHolder.get(i).coordY, 16,16);\r\n                else gc.clearRect(ImageHolder.get(i).coordX, ImageHolder.get(i).coordY, 32,32);\r\n                ImageHolder.remove(i);\r\n                System.out.println(ImageHolder.size());\r\n            }\r\n        }\r\n    }\r\n    public void distributeCitizen(int squareID){\r\n        if (squareID==0) {\r\n                int randomNumX = ThreadLocalRandom.current().nextInt(150,210-32);\r\n                int randomNumY = ThreadLocalRandom.current().nextInt(265,400-32);\r\n                ImageHolder.add(new ViewStone(squareID,randomNumX,randomNumY,2));\r\n            }\r\n        else if (squareID<6){\r\n            int randomNumX = ThreadLocalRandom.current().nextInt(150+ squareID* 110, 210+ squareID*110-32);\r\n            int randomNumY = ThreadLocalRandom.current().nextInt(265, 400-32);\r\n                ImageHolder.add(new ViewStone(squareID,randomNumX,randomNumY,2));\r\n        }\r\n        else if (squareID==6) {\r\n            int randomNumX = ThreadLocalRandom.current().nextInt(150 + squareID * 110, 150 + squareID * 110 + 50 - 32);\r\n            int randomNumY = ThreadLocalRandom.current().nextInt(265, 400 - 32);\r\n            ImageHolder.add(new ViewStone(squareID, randomNumX, randomNumY, 2));\r\n        }\r\n        else {\r\n                int randomNumX = ThreadLocalRandom.current().nextInt(150+ (12-squareID)*110,150+(12-squareID)*110+50-16);\r\n                int randomNumY = ThreadLocalRandom.current().nextInt(395,445-16);\r\n                ImageHolder.add(new ViewStone(squareID,randomNumX,randomNumY,2));\r\n        }\r\n    }\r\n    public void makeMove(Board b, int choosenSquareID, boolean isLeftMove, Player player) {\r\n            // Start to make move\r\n            ArrayList<BoardSquare> bss = b.getListOfSquare();\r\n            BoardSquare choosenSquare = b.getListOfSquare().get(choosenSquareID);\r\n            int citizens = choosenSquare.getNumberOfCitizens();\r\n            int currentSquareID = choosenSquareID;\r\n            choosenSquare.setNumberOfCitizens(0);\r\n            collectCitizen(currentSquareID);\r\n            bss.set(currentSquareID, choosenSquare);\r\n\r\n            while(citizens>0) {\r\n                try{\r\n                Thread.sleep(500);}\r\n                catch(InterruptedException e) {\r\n                    System.out.println(\"Error@##\");\r\n                }\r\n\r\n                citizens--;\r\n                if(isLeftMove == true) {\r\n                    if(currentSquareID == 11) currentSquareID = 0;\r\n                    else currentSquareID++;\r\n                    bss.get(currentSquareID).setNumberOfCitizens(bss.get(currentSquareID).getNumberOfCitizens()+1);\r\n                }else {\r\n                    if(currentSquareID == 0) currentSquareID = 11;\r\n                    else currentSquareID--;\r\n                    bss.get(currentSquareID).setNumberOfCitizens(bss.get(currentSquareID).getNumberOfCitizens()+1);\r\n                }\r\n                distributeCitizen(currentSquareID);\r\n\r\n                // decide if the turn is continued or stopped (get point or not)\r\n                if(citizens==0) {\r\n                    if(isLeftMove == true) {\r\n                        if(currentSquareID == 11) currentSquareID = 0;\r\n                        else currentSquareID++;\r\n                        // Capture or continue the turn\r\n                        \r\n                        boolean flag = true;\r\n                        \r\n                        while(bss.get(currentSquareID).isEmpty()) {\r\n                        \tint targetSquareID;\r\n                        \tif(currentSquareID == 11) targetSquareID = 0;\r\n                        \telse targetSquareID = currentSquareID+1;\r\n                        \tif(bss.get(targetSquareID).isEmpty()==false) {\r\n                        \t\tplayer.captureSquare(bss, currentSquareID, isLeftMove);\r\n                                try{\r\n                                    Thread.sleep(500);}\r\n                                catch(InterruptedException e) {\r\n                                    System.out.println(\"Error@##\");\r\n                                }\r\n                        \t\tcollectCitizen(targetSquareID);\r\n                                if(currentSquareID==11) currentSquareID = 1;\r\n                            \telse if(currentSquareID == 10) currentSquareID = 0;\r\n                            \telse currentSquareID += 2;\r\n                        \t}\r\n                        \tflag = false;\r\n                        }\r\n                        if(flag == false) break;\r\n                        \r\n                        if(bss.get(currentSquareID) instanceof CitizenSquare) {\r\n                        \tBoardSquare currentSquare = (CitizenSquare) bss.get(currentSquareID);\r\n                        \tcitizens = currentSquare.getNumberOfCitizens();\r\n                            try{\r\n                                Thread.sleep(500);}\r\n                            catch(InterruptedException e) {\r\n                                System.out.println(\"Error@##\");\r\n                            }\r\n                            collectCitizen(currentSquareID);\r\n                            currentSquare.setNumberOfCitizens(0);\r\n                            bss.set(currentSquareID, currentSquare);\r\n                        }\r\n                    }else {\r\n                        if(currentSquareID == 0) currentSquareID = 11;\r\n                        else currentSquareID--;\r\n                        // Capture or continue the turn\r\n                        \r\n                        boolean flag = true;\r\n                        \r\n                        while(bss.get(currentSquareID).isEmpty()) {\r\n                        \tint targetSquareID;\r\n                        \tif(currentSquareID == 0) targetSquareID = 11;\r\n                        \telse targetSquareID = currentSquareID-1;\r\n                        \tif(bss.get(targetSquareID).isEmpty()==false) {\r\n                        \t\tplayer.captureSquare(bss, currentSquareID, isLeftMove);\r\n                                try{\r\n                                    Thread.sleep(500);}\r\n                                catch(InterruptedException e) {\r\n                                    System.out.println(\"Error@##\");\r\n                                }\r\n                        \t\tcollectCitizen(targetSquareID);\r\n                        \t\tif(currentSquareID==1) currentSquareID = 11;\r\n                            \telse if(currentSquareID == 0) currentSquareID = 10;\r\n                            \telse currentSquareID -= 2;\r\n                        \t}\r\n                        \tflag = false;\r\n                        }\r\n                        if(flag == false) break;\r\n                        \r\n                        if(bss.get(currentSquareID) instanceof CitizenSquare) {\r\n                        \tBoardSquare currentSquare = (CitizenSquare) bss.get(currentSquareID);\r\n                        \tcitizens = currentSquare.getNumberOfCitizens();\r\n                            try{\r\n                                Thread.sleep(500);}\r\n                            catch(InterruptedException e) {\r\n                                System.out.println(\"Error@##\");\r\n                            }\r\n                            collectCitizen(currentSquareID);\r\n                            currentSquare.setNumberOfCitizens(0);\r\n                            bss.set(currentSquareID, currentSquare);\r\n                        }\r\n                    }\r\n                }\r\n                System.out.print(currentSquareID + \" \");\r\n\r\n                ArrayList<BoardSquare> listOfSquares = bss;\r\n                for(BoardSquare i : listOfSquares) {\r\n                    if(i.getboardSquareID()==0) {\r\n                        MandarinSquare ms0 = (MandarinSquare) i;\r\n                        System.out.print(\" ( \" + ms0.getNumberOfCitizens() + \" \" + Boolean.toString(ms0.isContainMandarin()) + \" (\" + ms0.getboardSquareID() + \") | \");\r\n                    }else if(i.getboardSquareID()==6) {\r\n                        MandarinSquare ms6 = (MandarinSquare) i;\r\n                        System.out.println(\"\" + ms6.getNumberOfCitizens() + \" \" + Boolean.toString(ms6.isContainMandarin()) + \" (\" + ms6.getboardSquareID() + \") ) \");\r\n                        System.out.print(\"\\t\\t\");\r\n                    }else if(i.getboardSquareID()>=1 && i.getboardSquareID() <= 5) {\r\n                        System.out.print(i.getNumberOfCitizens() + \" (\" + i.getboardSquareID() + \") | \");\r\n                    }else break;\r\n                }\r\n                for(int i = 11; i >= 7; i--) {\r\n                    BoardSquare cb = bss.get(i);\r\n                    System.out.print(cb.getNumberOfCitizens() + \" (\" + cb.getboardSquareID() + \") | \");\r\n                }\r\n                System.out.println(\"\\n\");\r\n\r\n            }\r\n            System.out.println();\r\n\r\n            // update the board square\r\n            b.setListOfSquare(bss);\r\n            if(MainGame.getPlayer1().equals(player)) {\r\n            \tMainGame.setP1Turn(false);\r\n            \tMainGame.getPlayer2().dispatchCitizens(b);\r\n            }else {\r\n            \tMainGame.setP1Turn(true);\r\n            \tMainGame.getPlayer1().dispatchCitizens(b);\r\n            }\r\n    }\r\n    private class CitizenSquareUI extends StackPane{\r\n        CitizenSquareUI(String name, Runnable action,int width, int height, int id) {\r\n            LinearGradient gradient = new LinearGradient(0, 0.5, 1, 0.5, true, CycleMethod.NO_CYCLE,\r\n                    new Stop(0.1, Color.web(\"black\", 0.75)),\r\n                    new Stop(1.0, Color.web(\"black\", 0.15))\r\n            );\r\n\r\n            Rectangle bg = new Rectangle(width, height);\r\n            Text text = new Text(\"Square number: \"+ id +\" \\nCurrent Citizen: \"+ Integer.toString(squares.get(id).getNumberOfCitizens()));\r\n            text.setFont(Font.font(10.0));\r\n            text.fillProperty().bind(\r\n              Bindings.when(bg.hoverProperty()).then(Color.BLUE).otherwise(Color.TRANSPARENT)\r\n            );\r\n            bg.fillProperty().bind(\r\n                    Bindings.when(hoverProperty()).then(Color.GRAY).otherwise(Color.TRANSPARENT)\r\n            );\r\n            setOnMouseClicked(e -> action.run());\r\n\r\n            getChildren().addAll(bg, text);\r\n        }\r\n\r\n    }\r\n    private Pane createStartMenu() {\r\n        Pane root = new Pane();\r\n        root.setPrefSize(1280,720);\r\n        Image bgImage =  new Image(getClass().getResource(\"gui/asset/menu_bg.jpg\").toExternalForm());\r\n        VBox box =  new VBox(\r\n                10,\r\n                new MenuItem(\"LET'S PLAT MANDARIN SQUARE\",()->{}),\r\n                new MenuItem(\"START NEW GAME\", ()-> stage.setScene(scene2)),\r\n                new MenuItem(\"SETTING\",()->{}),\r\n                new MenuItem(\"QUIT\",() -> Platform.exit())\r\n        );\r\n        box.setBackground(new Background(new BackgroundFill(Color.web(\"black\", 0.6),null,null)));\r\n        box.setTranslateX(500);\r\n        box.setTranslateY(250) ;\r\n        root.getChildren().addAll(\r\n                new ImageView(bgImage),\r\n                box\r\n\r\n        );\r\n        return root;\r\n    }\r\n    public void setStartGame(boolean status){\r\n        this.startGame=status;\r\n        if (!status){\r\n            stage.setScene(scene1);\r\n        }\r\n        else{\r\n            stage.setScene(scene2);\r\n        }\r\n    }\r\n    private static class MenuItem extends StackPane {\r\n        MenuItem(String name, Runnable action){\r\n            LinearGradient gradient = new LinearGradient(0, 0.5, 1, 0.5, true, CycleMethod.NO_CYCLE,\r\n                    new Stop(0.1, Color.web(\"black\",0.75)),\r\n                    new Stop(1.0, Color.web(\"black\",0.15))\r\n            );\r\n\r\n            Rectangle bg = new Rectangle(250,30,gradient);\r\n            Text text  = new Text(name);\r\n            text.setFont(Font.font(22.0));\r\n            text.fillProperty().bind(\r\n                    Bindings.when(hoverProperty()).then(Color.WHITE).otherwise(Color.GRAY)\r\n            );\r\n\r\n            setOnMouseClicked(e->action.run());\r\n            getChildren().addAll(bg, text);\r\n\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args){\r\n        launch(args);\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Menu.java b/src/Menu.java
--- a/src/Menu.java	(revision 04dffb6cb2948c0a00bc6791ff9aa742b4efeb11)
+++ b/src/Menu.java	(date 1717937071892)
@@ -1,6 +1,7 @@
 import java.awt.event.ActionEvent;
 import java.awt.event.ActionListener;
 import java.util.ArrayList;
+import java.util.Objects;
 import java.util.concurrent.ThreadLocalRandom;
 import controls.Game;
 import controls.board.Board;
@@ -44,6 +45,10 @@
     public Game MainGame;
     public boolean startGame = false;
     private GraphicsContext gc;
+    private Image pickImage;
+    private Image holdImage;
+    private Image spreadImage;
+
 
     @Override
     public void start(Stage primarystage) throws Exception {
@@ -51,6 +56,8 @@
         scene1 =  new Scene(layout1);
         stage =primarystage;
         stage.setScene(scene1);
+
+
         setup();
         Canvas canvas = new Canvas(1080, 960);
         gc = canvas.getGraphicsContext2D();
@@ -73,6 +80,13 @@
                 new CitizenSquareUI("Square 5",()->ChoosePivot(5),110,120,5)
         );
 
+        Image takeImage = new Image(Objects.requireNonNull(getClass().getResource("gui/asset/tay1.gif")).toExternalForm());
+        Image dropImage = new Image(Objects.requireNonNull(Objects.requireNonNull(getClass().getResource("gui/asset/tay1.gif"))).toExternalForm());
+        ImageView takeView = new ImageView(takeImage);
+        ImageView dropView = new ImageView(dropImage);
+        takeView.setVisible(false);
+        dropView.setVisible(false);
+
         Squares_row1.setTranslateX(210);
         Squares_row1.setTranslateY(265);
         HBox Squares_row2 = new HBox(
@@ -94,12 +108,21 @@
         );
         Mandarin_Square2.setTranslateX(100);
         Mandarin_Square2.setTranslateY(265);
-        scene2 = new Scene(new Pane(img_view,canvas,Squares_row1,Squares_row2,Mandarin_Square1,Mandarin_Square2));
+        Image p1TurnImage = new Image(getClass().getResource("gui/asset/P1turn.png").toExternalForm());
+        Image p2TurnImage = new Image(getClass().getResource("gui/asset/P2turn.png").toExternalForm());
+
+        ImageView p1TurnImageView = new ImageView(p1TurnImage);
+        ImageView p2TurnImageView = new ImageView(p2TurnImage);
+
+
 
+
+        scene2 = new Scene(new Pane(img_view,canvas,Squares_row1,
+                Squares_row2,Mandarin_Square1,Mandarin_Square2,
+                takeView, dropView));
 
         System.out.println("Running...");
 
-
     }
     private void run(GraphicsContext gc){
         if (MainGame.isEndGame()){
@@ -177,6 +200,7 @@
         squares.add(CS9);
         squares.add(CS10);
         squares.add(CS11);
+
         Board MainBoard =  new Board(squares);
         Player player1 =  new Player(1,0);
         Player player2 = new Player(2,0);
@@ -387,15 +411,74 @@
 //        }
 //
 //
+
+    public void take(int squareID) {
+        if (squareID>=1 && squareID<=5) {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(2).getTranslateX() + (squareID-1)*110);
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(2).getTranslateY());
+        }
+        else if (squareID>=7 && squareID<=11) {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(3).getTranslateX() + (11-squareID)*110);
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(3).getTranslateY());
+        }
+        else if (squareID == 0) {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(5).getTranslateX());
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(5).getTranslateY());
+        }
+        else {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(4).getTranslateX());
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(4).getTranslateY());
+        }
+
+        Duration visibleDuration = Duration.millis(500);
+        Timeline timeline = new Timeline(
+                new KeyFrame(Duration.ZERO, e -> ((Pane) scene2.getRoot()).getChildren().get(7).setVisible(true)),
+                new KeyFrame(visibleDuration, e -> ((Pane) scene2.getRoot()).getChildren().get(7).setVisible(false))
+        );
+//        ((Pane) scene2.getRoot()).getChildren().get(7).setVisible(true);
+        timeline.play();
+    }
+
+    public void drop(int squareID) {
+        if (squareID>=1 && squareID<=5) {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(2).getTranslateX() + (squareID-1)*110);
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(2).getTranslateY());
+        }
+        else if (squareID>=7 && squareID<=11) {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(3).getTranslateX() + (11-squareID)*110);
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(3).getTranslateY());
+        }
+        else if (squareID == 0) {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(5).getTranslateX());
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(5).getTranslateY());
+        }
+        else {
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateX(((Pane) scene2.getRoot()).getChildren().get(4).getTranslateX());
+            ((Pane) scene2.getRoot()).getChildren().get(7).setTranslateY(((Pane) scene2.getRoot()).getChildren().get(4).getTranslateY());
+        }
+
+        Duration visibleDuration = Duration.millis(500);
+        Timeline timeline = new Timeline(
+                new KeyFrame(Duration.ZERO, e -> ((Pane) scene2.getRoot()).getChildren().get(7).setVisible(true)),
+                new KeyFrame(visibleDuration, e -> ((Pane) scene2.getRoot()).getChildren().get(7).setVisible(false))
+        );
+        timeline.play();
+    }
+
+
     public void collectCitizen(int squareID){
         for ( int i= ImageHolder.size()-1;i>=0;i--){
             if (ImageHolder.get(i).square_id== squareID){
+                take(squareID);
                 if (ImageHolder.get(i).type==2) gc.clearRect(ImageHolder.get(i).coordX, ImageHolder.get(i).coordY, 16,16);
                 else gc.clearRect(ImageHolder.get(i).coordX, ImageHolder.get(i).coordY, 32,32);
                 ImageHolder.remove(i);
                 System.out.println(ImageHolder.size());
+
             }
         }
+        gc.drawImage(pickImage, 0, 0, 32, 32);
+
     }
     public void distributeCitizen(int squareID){
         if (squareID==0) {
@@ -406,7 +489,7 @@
         else if (squareID<6){
             int randomNumX = ThreadLocalRandom.current().nextInt(150+ squareID* 110, 210+ squareID*110-32);
             int randomNumY = ThreadLocalRandom.current().nextInt(265, 400-32);
-                ImageHolder.add(new ViewStone(squareID,randomNumX,randomNumY,2));
+            ImageHolder.add(new ViewStone(squareID,randomNumX,randomNumY,2));
         }
         else if (squareID==6) {
             int randomNumX = ThreadLocalRandom.current().nextInt(150 + squareID * 110, 150 + squareID * 110 + 50 - 32);
@@ -418,6 +501,7 @@
                 int randomNumY = ThreadLocalRandom.current().nextInt(395,445-16);
                 ImageHolder.add(new ViewStone(squareID,randomNumX,randomNumY,2));
         }
+        drop(squareID);
     }
     public void makeMove(Board b, int choosenSquareID, boolean isLeftMove, Player player) {
             // Start to make move
@@ -555,13 +639,24 @@
             System.out.println();
 
             // update the board square
+        Image p1TurnImage = new Image(getClass().getResource("gui/asset/P1turn.png").toExternalForm());
+        Image p2TurnImage = new Image(getClass().getResource("gui/asset/P2turn.png").toExternalForm());
+
+        ImageView p1TurnImageView = new ImageView(p1TurnImage);
+        ImageView p2TurnImageView = new ImageView(p2TurnImage);
             b.setListOfSquare(bss);
             if(MainGame.getPlayer1().equals(player)) {
             	MainGame.setP1Turn(false);
+                gc.clearRect(170, 70, 171, 31);
             	MainGame.getPlayer2().dispatchCitizens(b);
+                gc.drawImage(p2TurnImage, 170, 70, 171, 31);
             }else {
             	MainGame.setP1Turn(true);
             	MainGame.getPlayer1().dispatchCitizens(b);
+                gc.clearRect(170, 70, 171, 31);
+                gc.drawImage(p1TurnImage, 170, 70, 171, 31);
+
+
             }
     }
     private class CitizenSquareUI extends StackPane{
@@ -616,6 +711,7 @@
             stage.setScene(scene2);
         }
     }
+
     private static class MenuItem extends StackPane {
         MenuItem(String name, Runnable action){
             LinearGradient gradient = new LinearGradient(0, 0.5, 1, 0.5, true, CycleMethod.NO_CYCLE,
@@ -634,10 +730,12 @@
             getChildren().addAll(bg, text);
 
         }
-    }
+        // help me add  a image when spread stone
 
+    
     public static void main(String[] args){
         launch(args);
     }
 }
+}
 
Index: src/controls/board/BoardSquare.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controls.board;\r\n\r\npublic abstract class BoardSquare {\r\n    private int boardSquareID;\r\n    private int numberOfCitizens;\r\n\r\n    public BoardSquare(int BoardSquare_ID, int numberOfCitizens) {\r\n        this.boardSquareID = BoardSquare_ID;\r\n        this.numberOfCitizens = numberOfCitizens;\r\n    }\r\n\r\n\r\n\r\n    public int getboardSquareID() {\r\n        return boardSquareID;\r\n    }\r\n\r\n\r\n    public int getNumberOfCitizens() {\r\n        return this.numberOfCitizens;\r\n    }\r\n\r\n    public void setNumberOfCitizens(int i) {\r\n        this.numberOfCitizens = i;\r\n    }\r\n\r\n    abstract public boolean isEmpty();\r\n    abstract void operation();\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controls/board/BoardSquare.java b/src/controls/board/BoardSquare.java
--- a/src/controls/board/BoardSquare.java	(revision 04dffb6cb2948c0a00bc6791ff9aa742b4efeb11)
+++ b/src/controls/board/BoardSquare.java	(date 1717818553000)
@@ -4,6 +4,7 @@
     private int boardSquareID;
     private int numberOfCitizens;
 
+
     public BoardSquare(int BoardSquare_ID, int numberOfCitizens) {
         this.boardSquareID = BoardSquare_ID;
         this.numberOfCitizens = numberOfCitizens;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e1cb5f09-1c33-426a-a423-5e922d744247\" name=\"Changes\" comment=\"Adding GUI\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/controls/player/Player.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/controls/player/Player.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"JavaFXApplication\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2ge3SKYRISoZPt4HtjBQPTMLIeD\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Menu.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"git-widget-placeholder\": \"gui\",\r\n    \"ignore.virus.scanning.warn.message\": \"true\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/admin/Documents/GitHub/OOP-labs\",\r\n    \"onboarding.tips.debug.path\": \"D:/MandarinSquare/src/Main.java\",\r\n    \"project.structure.last.edited\": \"Libraries\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.JavaFX\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\MandarinSquare\\Design\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\admin\\Documents\\GitHub\\OOP-labs\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Menu\">\r\n    <configuration name=\"Menu\" type=\"Application\" factoryName=\"Application\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Menu\" />\r\n      <module name=\"MandarinSquare\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;C:\\Users\\admin\\Downloads\\openjfx-17.0.11_windows-x64_bin-sdk\\javafx-sdk-17.0.11\\lib&quot; --add-modules javafx.controls,javafx.fxml\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"openjdk-21\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <module name=\"MandarinSquare\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Unnamed\" type=\"JarApplication\" nameIsGenerated=\"true\">\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;C:\\Users\\admin\\Downloads\\openjfx-17.0.11_windows-x64_bin-sdk\\javafx-sdk-17.0.11\\lib&quot; --add-modules javafx.controls,javafx.fxml\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"C:\\Users\\admin\\Documents\\GitHub\\OOP-labs\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration name=\"Unnamed\" type=\"Remote\" nameIsGenerated=\"true\">\r\n      <module name=\"MandarinSquare\" />\r\n      <option name=\"USE_SOCKET_TRANSPORT\" value=\"true\" />\r\n      <option name=\"SERVER_MODE\" value=\"false\" />\r\n      <option name=\"SHMEM_ADDRESS\" />\r\n      <option name=\"HOST\" value=\"localhost\" />\r\n      <option name=\"PORT\" value=\"5005\" />\r\n      <option name=\"AUTO_RESTART\" value=\"false\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Unnamed\" />\r\n      <item itemvalue=\"Application.Menu\" />\r\n      <item itemvalue=\"JAR Application.Unnamed\" />\r\n      <item itemvalue=\"Remote JVM Debug.Unnamed\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-22-openjdk-22-3183f394aec4-bad0321e\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e1cb5f09-1c33-426a-a423-5e922d744247\" name=\"Changes\" comment=\"\" />\r\n      <created>1716044215054</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716044215054</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"controls package\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716189782125</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716189782125</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"update design pattern\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716780845913</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716780845913</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"update design pattern\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717563669755</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717563669755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update design pattern\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717599369998</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717599369998</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717600485082</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717600485082</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717600679719</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717600679719</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Adding GUI\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1717692942530</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1717692942530</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"8\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"controls package\" />\r\n    <MESSAGE value=\"update design pattern\" />\r\n    <MESSAGE value=\"Adding GUI\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Adding GUI\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 04dffb6cb2948c0a00bc6791ff9aa742b4efeb11)
+++ b/.idea/workspace.xml	(date 1717934861360)
@@ -5,8 +5,13 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="e1cb5f09-1c33-426a-a423-5e922d744247" name="Changes" comment="Adding GUI">
+      <change afterPath="$PROJECT_DIR$/src/gui/asset/tay1.gif" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/gui/asset/tay2.png" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/libraries/lib.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/lib.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/controls/player/Player.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controls/player/Player.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Menu.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/controls/board/BoardSquare.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controls/board/BoardSquare.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -25,7 +30,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="gui" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -47,10 +52,10 @@
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "git-widget-placeholder": "gui",
+    "git-widget-placeholder": "Demo1",
     "ignore.virus.scanning.warn.message": "true",
     "kotlin-language-version-configured": "true",
-    "last_opened_file_path": "C:/Users/admin/Documents/GitHub/OOP-labs",
+    "last_opened_file_path": "D:/New folder (3)/OOP-labs/src/gui/asset",
     "onboarding.tips.debug.path": "D:/MandarinSquare/src/Main.java",
     "project.structure.last.edited": "Libraries",
     "project.structure.proportion": "0.15",
@@ -60,9 +65,11 @@
 }]]></component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="D:\New folder (3)\OOP-labs\src\gui\asset" />
       <recent name="D:\MandarinSquare\Design" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\New folder (3)\OOP-labs\src\gui\asset" />
       <recent name="C:\Users\admin\Documents\GitHub\OOP-labs" />
     </key>
     <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
@@ -73,7 +80,7 @@
     <configuration name="Menu" type="Application" factoryName="Application">
       <option name="MAIN_CLASS_NAME" value="Menu" />
       <module name="MandarinSquare" />
-      <option name="VM_PARAMETERS" value="--module-path &quot;C:\Users\admin\Downloads\openjfx-17.0.11_windows-x64_bin-sdk\javafx-sdk-17.0.11\lib&quot; --add-modules javafx.controls,javafx.fxml" />
+      <option name="VM_PARAMETERS" value="--module-path &quot;D:\openjfx-17.0.11_windows-x64_bin-sdk\javafx-sdk-17.0.11\lib&quot; --add-modules javafx.controls,javafx.fxml" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -112,6 +119,7 @@
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
+        <option value="jdk-21.0.2-openjdk-21.0.2-4caba194b151-4f524021" />
         <option value="jdk-22-openjdk-22-3183f394aec4-bad0321e" />
       </set>
     </attachedChunks>
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" project-jdk-name=\"openjdk-21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 04dffb6cb2948c0a00bc6791ff9aa742b4efeb11)
+++ b/.idea/misc.xml	(date 1717697319611)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="openjdk-21" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/libraries/lib.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><component name=\"libraryTable\">\r\n  <library name=\"lib\">\r\n    <CLASSES>\r\n      <root url=\"file://$USER_HOME$/Downloads/openjfx-17.0.11_windows-x64_bin-sdk/javafx-sdk-17.0.11/lib\" />\r\n    </CLASSES>\r\n    <JAVADOC />\r\n    <SOURCES />\r\n    <jarDirectory url=\"file://$USER_HOME$/Downloads/openjfx-17.0.11_windows-x64_bin-sdk/javafx-sdk-17.0.11/lib\" recursive=\"false\" />\r\n  </library>\r\n</component>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/lib.xml b/.idea/libraries/lib.xml
--- a/.idea/libraries/lib.xml	(revision 04dffb6cb2948c0a00bc6791ff9aa742b4efeb11)
+++ b/.idea/libraries/lib.xml	(date 1717697319616)
@@ -1,10 +1,10 @@
 <component name="libraryTable">
   <library name="lib">
     <CLASSES>
-      <root url="file://$USER_HOME$/Downloads/openjfx-17.0.11_windows-x64_bin-sdk/javafx-sdk-17.0.11/lib" />
+      <root url="file://$PROJECT_DIR$/../../openjfx-17.0.11_windows-x64_bin-sdk/javafx-sdk-17.0.11/lib" />
     </CLASSES>
     <JAVADOC />
     <SOURCES />
-    <jarDirectory url="file://$USER_HOME$/Downloads/openjfx-17.0.11_windows-x64_bin-sdk/javafx-sdk-17.0.11/lib" recursive="false" />
+    <jarDirectory url="file://$PROJECT_DIR$/../../openjfx-17.0.11_windows-x64_bin-sdk/javafx-sdk-17.0.11/lib" recursive="false" />
   </library>
 </component>
\ No newline at end of file
